{"version":3,"sources":["../../../../src/lib/interactive/FreeLine.js"],"names":["React","Component","PropTypes","isDefined","isNotDefined","noop","strokeDashTypes","getValueFromOverride","terminate","saveNodeType","isHoverForInteractiveType","EachFreeLine","FreeLineComponent","MouseLocationIndicator","HoverTextNearMouse","FreeLine","props","handleStart","bind","handleEnd","handleDrawLine","handleDragLine","handleDragLineComplete","getSelectionState","state","nodes","index","newXYValue","setState","override","moreProps","trends","newTrends","map","each","idx","positionList","selected","onComplete","xyValue","current","length","mouseMoved","push","e","Array","onStart","appearance","d","enabled","snap","shouldDisableSnap","snapTo","currentPositionRadius","currentPositionStroke","currentPositionstrokeOpacity","currentPositionStrokeWidth","hoverText","tempLine","stroke","strokeWidth","fill","fillOpacity","strokeOpacity","eachAppearance","type","strokeDasharray","edgeStroke","edgeFill","edgeStrokeWidth","r","propTypes","bool","isRequired","func","onSelect","string","number","object","array","shape","oneOf","defaultProps","button","shiftKey","enable","bgHeight","bgWidth","text"],"mappings":"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","file":"FreeLine.js","sourcesContent":["\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { isDefined, isNotDefined, noop, strokeDashTypes } from \"../utils\";\r\n\r\nimport {\r\n\tgetValueFromOverride,\r\n\tterminate,\r\n\tsaveNodeType,\r\n\tisHoverForInteractiveType,\r\n} from \"./utils\";\r\n\r\nimport EachFreeLine from \"./wrapper/EachFreeLine\";\r\nimport FreeLineComponent from \"./components/FreeLine\";\r\nimport MouseLocationIndicator from \"./components/MouseLocationIndicator\";\r\nimport HoverTextNearMouse from \"./components/HoverTextNearMouse\";\r\n\r\nclass FreeLine extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.handleStart = this.handleStart.bind(this);\r\n\t\tthis.handleEnd = this.handleEnd.bind(this);\r\n\t\tthis.handleDrawLine = this.handleDrawLine.bind(this);\r\n\t\tthis.handleDragLine = this.handleDragLine.bind(this);\r\n\t\tthis.handleDragLineComplete = this.handleDragLineComplete.bind(this);\r\n\r\n\t\tthis.terminate = terminate.bind(this);\r\n\t\tthis.saveNodeType = saveNodeType.bind(this);\r\n\r\n\t\tthis.getSelectionState = isHoverForInteractiveType(\"trends\")\r\n\t\t\t.bind(this);\r\n\r\n\t\tthis.state = {\r\n\t\t};\r\n\t\tthis.nodes = [];\r\n\t}\r\n\thandleDragLine(index, newXYValue) {\r\n\t\tthis.setState({\r\n\t\t\toverride: {\r\n\t\t\t\tindex,\r\n\t\t\t\t...newXYValue\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\thandleDragLineComplete(moreProps) {\r\n\t\tconst { override } = this.state;\r\n\t\tif (isDefined(override)) {\r\n\t\t\tconst { trends } = this.props;\r\n\t\t\tconst newTrends = trends\r\n\t\t\t\t.map((each, idx) => idx === override.index\r\n\t\t\t\t\t? {\r\n\t\t\t\t\t\t...each,\r\n\t\t\t\t\t\tpositionList: override.positionList,\r\n\t\t\t\t\t\tselected: true,\r\n\t\t\t\t\t}\r\n\t\t\t\t\t: {\r\n\t\t\t\t\t\t...each,\r\n\t\t\t\t\t\tselected: false,\r\n\t\t\t\t\t});\r\n\r\n\t\t\tthis.setState({\r\n\t\t\t\toverride: null,\r\n\t\t\t}, () => {\r\n\t\t\t\tthis.props.onComplete(newTrends, moreProps);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thandleDrawLine(xyValue) {\r\n\t\tconst { current } = this.state;\r\n\t\tif (isDefined(current) && isDefined(current.positionList.length > 0)) {\r\n\t\t\tthis.mouseMoved = true;\r\n      const positionList = current.positionList;\r\n      positionList.push(xyValue);\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrent: {\r\n\t\t\t\t\tpositionList,\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thandleStart(xyValue, moreProps, e) {\r\n    const { current } = this.state;\r\n\t\tif (isNotDefined(current) || isNotDefined(current.positionList)) {\r\n\t\t\tthis.mouseMoved = false;\r\n      const positionList = new Array();\r\n      positionList.push(xyValue);\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrent: {\r\n\t\t\t\t\tpositionList,\r\n\t\t\t\t},\r\n\t\t\t}, () => {\r\n\t\t\t\tthis.props.onStart(moreProps, e);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thandleEnd(xyValue, moreProps, e) {\r\n\t\tconst { current } = this.state;\r\n\t\tconst { trends, appearance } = this.props;\r\n\t\tif (this.mouseMoved\r\n\t\t\t&& isDefined(current)\r\n\t\t\t&& isDefined(current.positionList.length > 100)\r\n\t\t) {\r\n      const positionList = current.positionList;\r\n      positionList.push(xyValue);\r\n\t\t\tconst newTrends = [\r\n\t\t\t\t...trends.map(d => ({ ...d, selected: false })),\r\n\t\t\t\t{\r\n          positionList,\r\n\t\t\t\t\tselected: true,\r\n\t\t\t\t\tappearance,\r\n\t\t\t\t}\r\n\t\t\t];\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrent: null,\r\n\t\t\t\ttrends: newTrends\r\n\t\t\t}, () => {\r\n\t\t\t\tthis.props.onComplete(newTrends, moreProps, e);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst { appearance } = this.props;\r\n\t\tconst { enabled, snap, shouldDisableSnap, snapTo } = this.props;\r\n\t\tconst { currentPositionRadius, currentPositionStroke } = this.props;\r\n\t\tconst { currentPositionstrokeOpacity, currentPositionStrokeWidth } = this.props;\r\n\t\tconst { hoverText, trends } = this.props;\r\n    const { current, override } = this.state;\r\n\r\n\t\tconst tempLine = isDefined(current) && isDefined(current.positionList.length > 0)\r\n\t\t\t? <FreeLineComponent\r\n\t\t\t\tnoHover\r\n\t\t\t\tpositionList={current.positionList}\r\n\t\t\t\tstroke={appearance.stroke}\r\n\t\t\t\tstrokeWidth={appearance.strokeWidth}\r\n\t\t\t\tfill={appearance.fill}\r\n\t\t\t\tfillOpacity={appearance.fillOpacity}\r\n\t\t\t\tstrokeOpacity={appearance.strokeOpacity} />\r\n\t\t\t: null;\r\n\r\n\t\treturn <g>\r\n\t\t\t{trends.map((each, idx) => {\r\n\t\t\t\tconst eachAppearance = isDefined(each.appearance)\r\n\t\t\t\t\t? { ...appearance, ...each.appearance }\r\n\t\t\t\t\t: appearance;\r\n\r\n\t\t\t\treturn <EachFreeLine key={idx}\r\n\t\t\t\t\tref={this.saveNodeType(idx)}\r\n\t\t\t\t\tindex={idx}\r\n\t\t\t\t\ttype={each.type}\r\n\t\t\t\t\tselected={each.selected}\r\n\t\t\t\t\tpositionList={getValueFromOverride(override, idx, \"positionList\", each.positionList)}\r\n\t\t\t\t\tstroke={eachAppearance.stroke}\r\n\t\t\t\t\tstrokeWidth={eachAppearance.strokeWidth}\r\n\t\t\t\t\tstrokeOpacity={eachAppearance.strokeOpacity}\r\n\t\t\t\t\tstrokeDasharray={eachAppearance.strokeDasharray}\r\n\t\t\t\t\tedgeStroke={eachAppearance.edgeStroke}\r\n\t\t\t\t\tedgeFill={eachAppearance.edgeFill}\r\n\t\t\t\t\tedgeStrokeWidth={eachAppearance.edgeStrokeWidth}\r\n\t\t\t\t\tfill={appearance.fill}\r\n\t\t\t\t\tfillOpacity={appearance.fillOpacity}\r\n\t\t\t\t\tr={eachAppearance.r}\r\n\t\t\t\t\thoverText={hoverText}\r\n\t\t\t\t\tonDrag={this.handleDragLine}\r\n\t\t\t\t\tonDragComplete={this.handleDragLineComplete}\r\n\t\t\t\t\tedgeInteractiveCursor=\"react-stockcharts-move-cursor\"\r\n\t\t\t\t\tlineInteractiveCursor=\"react-stockcharts-move-cursor\"\r\n\t\t\t\t/>;\r\n\t\t\t})}\r\n\t\t\t{tempLine}\r\n\t\t\t<MouseLocationIndicator\r\n\t\t\t\tenabled={enabled}\r\n\t\t\t\tsnap={snap}\r\n\t\t\t\tshouldDisableSnap={shouldDisableSnap}\r\n\t\t\t\tsnapTo={snapTo}\r\n\t\t\t\tr={currentPositionRadius}\r\n\t\t\t\tstroke={currentPositionStroke}\r\n\t\t\t\tstrokeOpacity={currentPositionstrokeOpacity}\r\n\t\t\t\tstrokeWidth={currentPositionStrokeWidth}\r\n\t\t\t\tonMouseDown={this.handleStart}\r\n\t\t\t\tonClick={this.handleEnd}\r\n\t\t\t\tonMouseMove={this.handleDrawLine}\r\n\t\t\t/>\r\n\t\t</g>;\r\n\t}\r\n}\r\n\r\n\r\nFreeLine.propTypes = {\r\n\tsnap: PropTypes.bool.isRequired,\r\n\tenabled: PropTypes.bool.isRequired,\r\n\tsnapTo: PropTypes.func,\r\n\tshouldDisableSnap: PropTypes.func.isRequired,\r\n\r\n\tonStart: PropTypes.func.isRequired,\r\n\tonComplete: PropTypes.func.isRequired,\r\n\tonSelect: PropTypes.func,\r\n\r\n\tcurrentPositionStroke: PropTypes.string,\r\n\tcurrentPositionStrokeWidth: PropTypes.number,\r\n\tcurrentPositionstrokeOpacity: PropTypes.number,\r\n\tcurrentPositionRadius: PropTypes.number,\r\n\thoverText: PropTypes.object.isRequired,\r\n\r\n\ttrends: PropTypes.array.isRequired,\r\n\r\n\tappearance: PropTypes.shape({\r\n\t\tstroke: PropTypes.string.isRequired,\r\n\t\tstrokeOpacity: PropTypes.number.isRequired,\r\n\t\tstrokeWidth: PropTypes.number.isRequired,\r\n\t\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\r\n\t\tedgeStrokeWidth: PropTypes.number.isRequired,\r\n\t\tedgeFill: PropTypes.string.isRequired,\r\n\t\tedgeStroke: PropTypes.string.isRequired,\r\n\t\tfill: PropTypes.string.isRequired,\r\n\t\tfillOpacity: PropTypes.number.isRequired,\r\n\t}).isRequired\r\n};\r\n\r\nFreeLine.defaultProps = {\r\n\tonStart: noop,\r\n\tonComplete: noop,\r\n\tonSelect: noop,\r\n\r\n\tcurrentPositionStroke: \"#000000\",\r\n\tcurrentPositionstrokeOpacity: 1,\r\n\tcurrentPositionStrokeWidth: 3,\r\n\tcurrentPositionRadius: 0,\r\n\r\n\tshouldDisableSnap: e => (e.button === 2 || e.shiftKey),\r\n\thoverText: {\r\n\t\t...HoverTextNearMouse.defaultProps,\r\n\t\tenable: true,\r\n\t\tbgHeight: 18,\r\n\t\tbgWidth: 120,\r\n\t\ttext: \"Click to select\",\r\n\t},\r\n\ttrends: [],\r\n\r\n\tappearance: {\r\n\t\tstroke: \"#000000\",\r\n\t\tstrokeOpacity: 1,\r\n\t\tstrokeWidth: 0.7,\r\n\t\tstrokeDasharray: \"Solid\",\r\n\t\tedgeStrokeWidth: 1,\r\n\t\tedgeFill: \"#FFFFFF\",\r\n\t\tedgeStroke: \"#000000\",\r\n\t\tr: 6,\r\n\t\tfill: \"#8AAFE2\",\r\n\t\tfillOpacity: 0.5,\r\n\t}\r\n};\r\n\r\nexport default FreeLine;"]}