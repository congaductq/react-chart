{"version":3,"sources":["../../../../../src/lib/interactive/components/FreeLine.js"],"names":["React","Component","PropTypes","GenericChartComponent","getMouseCanvas","isDefined","noop","hexToRGBA","getStrokeDasharray","strokeDashTypes","StraightLine","props","renderSVG","bind","drawOnCanvas","isHover","moreProps","tolerance","onHover","positionList","mouseXY","xScale","yScale","chartConfig","i","length","x1Value","y1Value","x2Value","y2Value","value","isHovering","ctx","stroke","strokeWidth","strokeOpacity","lineWidth","strokeStyle","beginPath","moveTo","slice","forEach","lineTo","element","strokeDasharray","helper","x1","y1","x2","y2","selected","interactiveCursorClass","onDragStart","onDrag","onDragComplete","onUnHover","isHovering2","start","end","mouseX","mouseY","m","getSlope","b","getYIntercept","y","Math","min","max","line","generateLine","type","modLine","undefined","getLineCoordinates","propTypes","arrayOf","any","isRequired","string","number","oneOf","onEdge1Drag","func","onEdge2Drag","defaultClassName","r","withEdge","bool","children","fill","fillOpacity","defaultProps","edgeStrokeWidth","edgeStroke","edgeFill"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,OAAOC,qBAAP,MAAkC,6BAAlC;AACA,SAASC,cAAT,QAA+B,wBAA/B;;AAEA,SACCC,SADD,EAECC,IAFD,EAGCC,SAHD,EAICC,kBAJD,EAKCC,eALD,QAMO,aANP;;IAQMC,Y;;;AACL,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA,0HACZA,KADY;;AAGlB,QAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeC,IAAf,OAAjB;AACA,QAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AACA,QAAKE,OAAL,GAAe,MAAKA,OAAL,CAAaF,IAAb,OAAf;AALkB;AAMlB;;;;0BACOG,S,EAAW;AAAA,gBACa,KAAKL,KADlB;AAAA,OACVM,SADU,UACVA,SADU;AAAA,OACCC,OADD,UACCA,OADD;;;AAGlB,OAAIb,UAAUa,OAAV,CAAJ,EAAwB;AAAA,QACZC,YADY,GACK,KAAKR,KADV,CACZQ,YADY;AAAA,QAEdC,OAFc,GAE+BJ,SAF/B,CAEdI,OAFc;AAAA,QAELC,MAFK,GAE+BL,SAF/B,CAELK,MAFK;AAAA,QAEkBC,MAFlB,GAE+BN,SAF/B,CAEGO,WAFH,CAEkBD,MAFlB;;AAGtB,SAAK,IAAIE,IAAI,CAAb,EAAgBA,IAAIL,aAAaM,MAAb,GAAsB,CAA1C,EAA6CD,GAA7C,EAAkD;AAC5C,SAAME,UAAUP,aAAaK,CAAb,EAAgB,CAAhB,CAAhB;AACA,SAAMG,UAAUR,aAAaK,CAAb,EAAgB,CAAhB,CAAhB;AACA,SAAMI,UAAUT,aAAaK,IAAI,CAAjB,EAAoB,CAApB,CAAhB;AACA,SAAMK,UAAUV,aAAaK,IAAI,CAAjB,EAAoB,CAApB,CAAhB;AACA,SAAMM,QAASC,WAAW;AACxBL,sBADwB,EACfC,gBADe;AAExBC,sBAFwB,EAEfC,gBAFe;AAGxBT,sBAHwB;AAIxBH,0BAJwB;AAKxBI,oBALwB;AAMxBC;AANwB,MAAX,CAAf;AAQA,SAAIQ,KAAJ,EAAW;AACb,aAAO,IAAP;AACG;AACF;AACN;AACD,UAAO,KAAP;AACA;;;+BACYE,G,EAAKhB,S,EAAW;AAAA,iBACmC,KAAKL,KADxC;AAAA,OAClBsB,MADkB,WAClBA,MADkB;AAAA,OACVC,WADU,WACVA,WADU;AAAA,OACGC,aADH,WACGA,aADH;AAAA,OACkBhB,YADlB,WACkBA,YADlB;AAAA,OAEnBE,MAFmB,GAEiBL,SAFjB,CAEnBK,MAFmB;AAAA,OAEIC,MAFJ,GAEiBN,SAFjB,CAEXO,WAFW,CAEID,MAFJ;;AAG5BU,OAAII,SAAJ,GAAgBF,WAAhB;AACAF,OAAIK,WAAJ,GAAkB9B,UAAU0B,MAAV,EAAkBE,aAAlB,CAAlB;AACEH,OAAIM,SAAJ;AACAN,OAAIO,MAAJ,CAAWlB,OAAOF,aAAa,CAAb,EAAgB,CAAhB,CAAP,CAAX,EAAuCG,OAAOH,aAAa,CAAb,EAAgB,CAAhB,CAAP,CAAvC;AACAA,gBAAaqB,KAAb,CAAmB,CAAnB,EAAsBC,OAAtB,CAA8B,mBAAW;AACvCT,QAAIU,MAAJ,CAAWrB,OAAOsB,QAAQ,CAAR,CAAP,CAAX,EAA+BrB,OAAOqB,QAAQ,CAAR,CAAP,CAA/B;AACD,IAFD;AAGAX,OAAIC,MAAJ;AACF;;;4BACSjB,S,EAAW;AAAA,iBAC4C,KAAKL,KADjD;AAAA,OACZsB,MADY,WACZA,MADY;AAAA,OACJC,WADI,WACJA,WADI;AAAA,OACSC,aADT,WACSA,aADT;AAAA,OACwBS,eADxB,WACwBA,eADxB;;;AAGpB,OAAMR,YAAYF,WAAlB;;AAHoB,iBAKOW,OAAO,KAAKlC,KAAZ,EAAmBK,SAAnB,CALP;AAAA,OAKZ8B,EALY,WAKZA,EALY;AAAA,OAKRC,EALQ,WAKRA,EALQ;AAAA,OAKJC,EALI,WAKJA,EALI;AAAA,OAKAC,EALA,WAKAA,EALA;;AAMpB,UACC;AACC,QAAIH,EADL,EACS,IAAIC,EADb,EACiB,IAAIC,EADrB,EACyB,IAAIC,EAD7B;AAEC,YAAQhB,MAFT,EAEiB,aAAaG,SAF9B;AAGC,qBAAiB5B,mBAAmBoC,eAAnB,CAHlB;AAIC,mBAAeT,aAJhB,GADD;AAOA;;;2BACQ;AAAA,iBACqC,KAAKxB,KAD1C;AAAA,OACAuC,QADA,WACAA,QADA;AAAA,OACUC,sBADV,WACUA,sBADV;AAAA,iBAE4D,KAAKxC,KAFjE;AAAA,OAEAyC,WAFA,WAEAA,WAFA;AAAA,OAEaC,MAFb,WAEaA,MAFb;AAAA,OAEqBC,cAFrB,WAEqBA,cAFrB;AAAA,OAEqCpC,OAFrC,WAEqCA,OAFrC;AAAA,OAE8CqC,SAF9C,WAE8CA,SAF9C;;;AAIR,UAAO,oBAAC,qBAAD;AACN,aAAS,KAAKxC,OADR;;AAGN,aAAS,KAAKH,SAHR;AAIN,kBAAcR,cAJR;AAKN,gBAAY,KAAKU,YALX;;AAON,4BAAwBqC,sBAPlB;AAQN,cAAUD,QARJ;;AAUN,iBAAaE,WAVP;AAWN,YAAQC,MAXF;AAYN,oBAAgBC,cAZV;AAaN,aAASpC,OAbH;AAcN,eAAWqC,SAdL;;AAgBN,YAAQ,CAAC,WAAD,EAAc,KAAd,EAAqB,MAArB;AAhBF,KAAP;AAkBA;;;;EAlFyBtD,S;;AAqF3B,OAAO,SAASuD,WAAT,CAAqBC,KAArB,EAA4BC,GAA5B,QAAmDzC,SAAnD,EAA8D;AAAA;AAAA,KAA5B0C,MAA4B;AAAA,KAApBC,MAAoB;;AACpE,KAAMC,IAAIC,SAASL,KAAT,EAAgBC,GAAhB,CAAV;;AAEA,KAAIrD,UAAUwD,CAAV,CAAJ,EAAkB;AACjB,MAAME,IAAIC,cAAcH,CAAd,EAAiBH,GAAjB,CAAV;AACA,MAAMO,IAAIJ,IAAIF,MAAJ,GAAaI,CAAvB;AACA,SAAQH,SAASK,IAAIhD,SAAd,IACH2C,SAAUK,IAAIhD,SADX,IAEH0C,SAASO,KAAKC,GAAL,CAASV,MAAM,CAAN,CAAT,EAAmBC,IAAI,CAAJ,CAAnB,IAA6BzC,SAFnC,IAGH0C,SAASO,KAAKE,GAAL,CAASX,MAAM,CAAN,CAAT,EAAmBC,IAAI,CAAJ,CAAnB,IAA6BzC,SAH1C;AAIA,EAPD,MAOO;AACN,SAAO2C,UAAUM,KAAKC,GAAL,CAASV,MAAM,CAAN,CAAT,EAAmBC,IAAI,CAAJ,CAAnB,CAAV,IACHE,UAAUM,KAAKE,GAAL,CAASX,MAAM,CAAN,CAAT,EAAmBC,IAAI,CAAJ,CAAnB,CADP,IAEHC,SAASF,MAAM,CAAN,IAAWxC,SAFjB,IAGH0C,SAASF,MAAM,CAAN,IAAWxC,SAHxB;AAIA;AACD;;AAED,OAAO,SAASc,UAAT,QAOJ;AAAA,KANFL,OAME,SANFA,OAME;AAAA,KANOC,OAMP,SANOA,OAMP;AAAA,KALFC,OAKE,SALFA,OAKE;AAAA,KALOC,OAKP,SALOA,OAKP;AAAA,KAJFT,OAIE,SAJFA,OAIE;AAAA,KAHFH,SAGE,SAHFA,SAGE;AAAA,KAFFI,MAEE,SAFFA,MAEE;AAAA,KADFC,MACE,SADFA,MACE;;;AAEF,KAAM+C,OAAOC,aAAa;AACzBb,SAAO,CAAC/B,OAAD,EAAUC,OAAV,CADkB;AAEzB+B,OAAK,CAAC9B,OAAD,EAAUC,OAAV,CAFoB;AAGzBR,gBAHyB;AAIzBC;AAJyB,EAAb,CAAb;;AAOA,KAAMmC,QAAQ,CAACpC,OAAOgD,KAAKvB,EAAZ,CAAD,EAAkBxB,OAAO+C,KAAKtB,EAAZ,CAAlB,CAAd;AACA,KAAMW,MAAM,CAACrC,OAAOgD,KAAKrB,EAAZ,CAAD,EAAkB1B,OAAO+C,KAAKpB,EAAZ,CAAlB,CAAZ;;AAEA,KAAMY,IAAIC,SAASL,KAAT,EAAgBC,GAAhB,CAAV;;AAZE,+BAauBtC,OAbvB;AAAA,KAaKuC,MAbL;AAAA,KAaaC,MAbb;;AAeF,KAAIvD,UAAUwD,CAAV,CAAJ,EAAkB;AACjB,MAAME,IAAIC,cAAcH,CAAd,EAAiBH,GAAjB,CAAV;AACA,MAAMO,IAAIJ,IAAIF,MAAJ,GAAaI,CAAvB;;AAEA,SAAOH,SAAUK,IAAIhD,SAAd,IACH2C,SAAUK,IAAIhD,SADX,IAEH0C,SAASO,KAAKC,GAAL,CAASV,MAAM,CAAN,CAAT,EAAmBC,IAAI,CAAJ,CAAnB,IAA6BzC,SAFnC,IAGH0C,SAASO,KAAKE,GAAL,CAASX,MAAM,CAAN,CAAT,EAAmBC,IAAI,CAAJ,CAAnB,IAA6BzC,SAH1C;AAIA,EARD,MAQO;AACN,SAAO2C,UAAUM,KAAKC,GAAL,CAASV,MAAM,CAAN,CAAT,EAAmBC,IAAI,CAAJ,CAAnB,CAAV,IACHE,UAAUM,KAAKE,GAAL,CAASX,MAAM,CAAN,CAAT,EAAmBC,IAAI,CAAJ,CAAnB,CADP,IAEHC,SAASF,MAAM,CAAN,IAAWxC,SAFjB,IAGH0C,SAASF,MAAM,CAAN,IAAWxC,SAHxB;AAIA;AACD;;AAED,SAAS4B,MAAT,CAAgBlC,KAAhB,EAAuBK,SAAvB,EAAkC;AAAA,KACzBU,OADyB,GACoBf,KADpB,CACzBe,OADyB;AAAA,KAChBE,OADgB,GACoBjB,KADpB,CAChBiB,OADgB;AAAA,KACPD,OADO,GACoBhB,KADpB,CACPgB,OADO;AAAA,KACEE,OADF,GACoBlB,KADpB,CACEkB,OADF;AAAA,KACW0C,IADX,GACoB5D,KADpB,CACW4D,IADX;AAAA,KAGzBlD,MAHyB,GAGWL,SAHX,CAGzBK,MAHyB;AAAA,KAGFC,MAHE,GAGWN,SAHX,CAGjBO,WAHiB,CAGFD,MAHE;;;AAKjC,KAAMkD,UAAUF,aAAa;AAC5BC,YAD4B;AAE5Bd,SAAO,CAAC/B,OAAD,EAAUC,OAAV,CAFqB;AAG5B+B,OAAK,CAAC9B,OAAD,EAAUC,OAAV,CAHuB;AAI5BR,gBAJ4B;AAK5BC;AAL4B,EAAb,CAAhB;;AAQA,KAAMwB,KAAKzB,OAAOmD,QAAQ1B,EAAf,CAAX;AACA,KAAMC,KAAKzB,OAAOkD,QAAQzB,EAAf,CAAX;AACA,KAAMC,KAAK3B,OAAOmD,QAAQxB,EAAf,CAAX;AACA,KAAMC,KAAK3B,OAAOkD,QAAQvB,EAAf,CAAX;;AAEA,QAAO;AACNH,QADM,EACFC,MADE,EACEC,MADF,EACMC;AADN,EAAP;AAGA;;AAED,OAAO,SAASa,QAAT,CAAkBL,KAAlB,EAAyBC,GAAzB,EAA8B;AACpC,KAAMG,EAAE,WAAF,GAAgBH,IAAI,CAAJ,MAAWD,MAAM,CAAN,CAAX,GACnBgB,SADmB,GAEnB,CAACf,IAAI,CAAJ,IAASD,MAAM,CAAN,CAAV,KAAuBC,IAAI,CAAJ,IAASD,MAAM,CAAN,CAAhC,CAFH;AAGA,QAAOI,CAAP;AACA;AACD,OAAO,SAASG,aAAT,CAAuBH,CAAvB,EAA0BH,GAA1B,EAA+B;AACrC,KAAMK,EAAE,iBAAF,GAAsB,CAAC,CAAD,GAAKF,CAAL,GAASH,IAAI,CAAJ,CAAT,GAAkBA,IAAI,CAAJ,CAA9C;AACA,QAAOK,CAAP;AACA;;AAED,OAAO,SAASO,YAAT,QAEJ;AAAA,KADFb,KACE,SADFA,KACE;AAAA,KADKC,GACL,SADKA,GACL;AAAA,KADUrC,MACV,SADUA,MACV;AAAA,KADkBC,MAClB,SADkBA,MAClB;;AACF,KAAMuC,EAAE,WAAF,GAAgBC,SAASL,KAAT,EAAgBC,GAAhB,CAAtB;AACA;AACA,KAAMK,EAAE,iBAAF,GAAsBC,cAAcH,CAAd,EAAiBJ,KAAjB,CAA5B;AACA,QAAOiB,mBAAmB;AACvBjB,cADuB,EAChBC,QADgB,EACXrC,cADW,EACHC,cADG,EACKuC,IADL,EACQE;AADR,EAAnB,CAAP;AAGA;;AAED,SAASW,kBAAT,QAEG;AAAA,KADFjB,KACE,SADFA,KACE;AAAA,KADKC,GACL,SADKA,GACL;;AAAA,6BACeD,KADf;AAAA,KACKX,EADL;AAAA,KACSC,EADT;;AAAA,2BAEeW,GAFf;AAAA,KAEKV,EAFL;AAAA,KAESC,EAFT;;AAGF,KAAIS,IAAI,CAAJ,MAAWD,MAAM,CAAN,CAAf,EAAyB;AACxB,SAAO;AACNX,SADM;AAENC,OAAIU,MAAM,CAAN,CAFE;AAGNT,OAAIF,EAHE;AAING,OAAIS,IAAI,CAAJ;AAJE,GAAP;AAMA;;AAED,QAAO;AACNZ,QADM,EACFC,MADE;AAENC,QAFM,EAEFC;AAFE,EAAP;AAIA;;AAEDvC,aAAaiE,SAAb,GAAyB;AACxBxD,eAAcjB,UAAU0E,OAAV,CAAkB1E,UAAU2E,GAA5B,EAAiCC,UADvB;AAExB3B,yBAAwBjD,UAAU6E,MAFV;AAGxB9C,SAAQ/B,UAAU6E,MAAV,CAAiBD,UAHD;AAIxB5C,cAAahC,UAAU8E,MAAV,CAAiBF,UAJN;AAKxB3C,gBAAejC,UAAU8E,MAAV,CAAiBF,UALR;AAMxBlC,kBAAiB1C,UAAU+E,KAAV,CAAgBxE,eAAhB,CANO;;AAQxByE,cAAahF,UAAUiF,IAAV,CAAeL,UARJ;AASxBM,cAAalF,UAAUiF,IAAV,CAAeL,UATJ;AAUxB1B,cAAalD,UAAUiF,IAAV,CAAeL,UAVJ;AAWxBzB,SAAQnD,UAAUiF,IAAV,CAAeL,UAXC;AAYxBxB,iBAAgBpD,UAAUiF,IAAV,CAAeL,UAZP;AAaxB5D,UAAShB,UAAUiF,IAbK;AAcxB5B,YAAWrD,UAAUiF,IAdG;;AAgBxBE,mBAAkBnF,UAAU6E,MAhBJ;;AAkBxBO,IAAGpF,UAAU8E,MAAV,CAAiBF,UAlBI;AAmBxBS,WAAUrF,UAAUsF,IAAV,CAAeV,UAnBD;AAoBxBW,WAAUvF,UAAUiF,IAAV,CAAeL,UApBD;AAqBxB7D,YAAWf,UAAU8E,MAAV,CAAiBF,UArBJ;AAsBxB5B,WAAUhD,UAAUsF,IAAV,CAAeV,UAtBD;AAuBxBY,OAAMxF,UAAU6E,MAAV,CAAiBD,UAvBC;AAwBxBa,cAAazF,UAAU8E,MAAV,CAAiBF;AAxBN,CAAzB;;AA2BApE,aAAakF,YAAb,GAA4B;AAC3BV,cAAa5E,IADc;AAE3B8E,cAAa9E,IAFc;AAG3B8C,cAAa9C,IAHc;AAI3B+C,SAAQ/C,IAJmB;AAK3BgD,iBAAgBhD,IALW;;AAO3BuF,kBAAiB,CAPU;AAQ3BC,aAAY,SARe;AAS3BC,WAAU,SATiB;AAU3BT,IAAG,EAVwB;AAW3BC,WAAU,KAXiB;AAY3BrD,cAAa,CAZc;AAa3BU,kBAAiB,OAbU;AAc3B6C,WAAUnF,IAdiB;AAe3BW,YAAW,CAfgB;AAgB3BiC,WAAU,KAhBiB;AAiB3BwC,OAAM,SAjBqB;AAkB3BC,cAAa;AAlBc,CAA5B;;AAqBA,eAAejF,YAAf","file":"FreeLine.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport GenericChartComponent from \"../../GenericChartComponent\";\r\nimport { getMouseCanvas } from \"../../GenericComponent\";\r\n\r\nimport {\r\n\tisDefined,\r\n\tnoop,\r\n\thexToRGBA,\r\n\tgetStrokeDasharray,\r\n\tstrokeDashTypes,\r\n} from \"../../utils\";\r\n\r\nclass StraightLine extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.renderSVG = this.renderSVG.bind(this);\r\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\r\n\t\tthis.isHover = this.isHover.bind(this);\r\n\t}\r\n\tisHover(moreProps) {\r\n\t\tconst { tolerance, onHover } = this.props;\r\n\r\n\t\tif (isDefined(onHover)) {\r\n      const { positionList } = this.props;\r\n\t\t\t\tconst { mouseXY, xScale, chartConfig: { yScale } } = moreProps;\r\n\t\t\t\tfor (let i = 0; i < positionList.length - 1; i++) {\r\n          const x1Value = positionList[i][0];\r\n          const y1Value = positionList[i][1];\r\n          const x2Value = positionList[i + 1][0];\r\n          const y2Value = positionList[i + 1][1];\r\n          const value =  isHovering({\r\n            x1Value, y1Value,\r\n            x2Value, y2Value,\r\n            mouseXY,\r\n            tolerance,\r\n            xScale,\r\n            yScale,\r\n          });\r\n          if (value) {\r\n\t\t\t\t    return true;\r\n          }\r\n        }\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tdrawOnCanvas(ctx, moreProps) {\r\n    const { stroke, strokeWidth, strokeOpacity, positionList } = this.props;\r\n\t  const { xScale, chartConfig: { yScale } } = moreProps;\r\n\t\tctx.lineWidth = strokeWidth;\r\n\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\r\n    ctx.beginPath();\r\n    ctx.moveTo(xScale(positionList[0][0]), yScale(positionList[0][1]));\r\n    positionList.slice(1).forEach(element => {\r\n      ctx.lineTo(xScale(element[0]), yScale(element[1]));\r\n    });\r\n    ctx.stroke();\r\n\t}\r\n\trenderSVG(moreProps) {\r\n\t\tconst { stroke, strokeWidth, strokeOpacity, strokeDasharray } = this.props;\r\n\r\n\t\tconst lineWidth = strokeWidth;\r\n\r\n\t\tconst { x1, y1, x2, y2 } = helper(this.props, moreProps);\r\n\t\treturn (\r\n\t\t\t<line\r\n\t\t\t\tx1={x1} y1={y1} x2={x2} y2={y2}\r\n\t\t\t\tstroke={stroke} strokeWidth={lineWidth}\r\n\t\t\t\tstrokeDasharray={getStrokeDasharray(strokeDasharray)}\r\n\t\t\t\tstrokeOpacity={strokeOpacity} />\r\n\t\t);\r\n\t}\r\n\trender() {\r\n\t\tconst { selected, interactiveCursorClass } = this.props;\r\n\t\tconst { onDragStart, onDrag, onDragComplete, onHover, onUnHover } = this.props;\r\n\r\n\t\treturn <GenericChartComponent\r\n\t\t\tisHover={this.isHover}\r\n\r\n\t\t\tsvgDraw={this.renderSVG}\r\n\t\t\tcanvasToDraw={getMouseCanvas}\r\n\t\t\tcanvasDraw={this.drawOnCanvas}\r\n\r\n\t\t\tinteractiveCursorClass={interactiveCursorClass}\r\n\t\t\tselected={selected}\r\n\r\n\t\t\tonDragStart={onDragStart}\r\n\t\t\tonDrag={onDrag}\r\n\t\t\tonDragComplete={onDragComplete}\r\n\t\t\tonHover={onHover}\r\n\t\t\tonUnHover={onUnHover}\r\n\r\n\t\t\tdrawOn={[\"mousemove\", \"pan\", \"drag\"]}\r\n\t\t/>;\r\n\t}\r\n}\r\n\r\nexport function isHovering2(start, end, [mouseX, mouseY], tolerance) {\r\n\tconst m = getSlope(start, end);\r\n\r\n\tif (isDefined(m)) {\r\n\t\tconst b = getYIntercept(m, end);\r\n\t\tconst y = m * mouseX + b;\r\n\t\treturn (mouseY < y + tolerance)\r\n\t\t\t&& mouseY > (y - tolerance)\r\n\t\t\t&& mouseX > Math.min(start[0], end[0]) - tolerance\r\n\t\t\t&& mouseX < Math.max(start[0], end[0]) + tolerance;\r\n\t} else {\r\n\t\treturn mouseY >= Math.min(start[1], end[1])\r\n\t\t\t&& mouseY <= Math.max(start[1], end[1])\r\n\t\t\t&& mouseX < start[0] + tolerance\r\n\t\t\t&& mouseX > start[0] - tolerance;\r\n\t}\r\n}\r\n\r\nexport function isHovering({\r\n\tx1Value, y1Value,\r\n\tx2Value, y2Value,\r\n\tmouseXY,\r\n\ttolerance,\r\n\txScale,\r\n\tyScale,\r\n}) {\r\n\r\n\tconst line = generateLine({\r\n\t\tstart: [x1Value, y1Value],\r\n\t\tend: [x2Value, y2Value],\r\n\t\txScale,\r\n\t\tyScale,\r\n  });\r\n\r\n\tconst start = [xScale(line.x1), yScale(line.y1)];\r\n\tconst end = [xScale(line.x2), yScale(line.y2)];\r\n\r\n\tconst m = getSlope(start, end);\r\n\tconst [mouseX, mouseY] = mouseXY;\r\n\r\n\tif (isDefined(m)) {\r\n\t\tconst b = getYIntercept(m, end);\r\n\t\tconst y = m * mouseX + b;\r\n\r\n\t\treturn mouseY < (y + tolerance)\r\n\t\t\t&& mouseY > (y - tolerance)\r\n\t\t\t&& mouseX > Math.min(start[0], end[0]) - tolerance\r\n\t\t\t&& mouseX < Math.max(start[0], end[0]) + tolerance;\r\n\t} else {\r\n\t\treturn mouseY >= Math.min(start[1], end[1])\r\n\t\t\t&& mouseY <= Math.max(start[1], end[1])\r\n\t\t\t&& mouseX < start[0] + tolerance\r\n\t\t\t&& mouseX > start[0] - tolerance;\r\n\t}\r\n}\r\n\r\nfunction helper(props, moreProps) {\r\n\tconst { x1Value, x2Value, y1Value, y2Value, type } = props;\r\n\r\n\tconst { xScale, chartConfig: { yScale } } = moreProps;\r\n\r\n\tconst modLine = generateLine({\r\n\t\ttype,\r\n\t\tstart: [x1Value, y1Value],\r\n\t\tend: [x2Value, y2Value],\r\n\t\txScale,\r\n\t\tyScale,\r\n\t});\r\n\r\n\tconst x1 = xScale(modLine.x1);\r\n\tconst y1 = yScale(modLine.y1);\r\n\tconst x2 = xScale(modLine.x2);\r\n\tconst y2 = yScale(modLine.y2);\r\n\r\n\treturn {\r\n\t\tx1, y1, x2, y2\r\n\t};\r\n}\r\n\r\nexport function getSlope(start, end) {\r\n\tconst m /* slope */ = end[0] === start[0]\r\n\t\t? undefined\r\n\t\t: (end[1] - start[1]) / (end[0] - start[0]);\r\n\treturn m;\r\n}\r\nexport function getYIntercept(m, end) {\r\n\tconst b /* y intercept */ = -1 * m * end[0] + end[1];\r\n\treturn b;\r\n}\r\n\r\nexport function generateLine({\r\n\tstart, end, xScale, yScale\r\n}) {\r\n\tconst m /* slope */ = getSlope(start, end);\r\n\t// console.log(end[0] - start[0], m)\r\n\tconst b /* y intercept */ = getYIntercept(m, start);\r\n\treturn getLineCoordinates({\r\n    start, end, xScale, yScale, m, b\r\n  });\r\n}\r\n\r\nfunction getLineCoordinates({\r\n\tstart, end\r\n}) {\r\n\tconst [x1, y1] = start;\r\n\tconst [x2, y2] = end;\r\n\tif (end[0] === start[0]) {\r\n\t\treturn {\r\n\t\t\tx1,\r\n\t\t\ty1: start[1],\r\n\t\t\tx2: x1,\r\n\t\t\ty2: end[1],\r\n\t\t};\r\n\t}\r\n\r\n\treturn {\r\n\t\tx1, y1,\r\n\t\tx2, y2,\r\n\t};\r\n}\r\n\r\nStraightLine.propTypes = {\r\n\tpositionList: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n\tinteractiveCursorClass: PropTypes.string,\r\n\tstroke: PropTypes.string.isRequired,\r\n\tstrokeWidth: PropTypes.number.isRequired,\r\n\tstrokeOpacity: PropTypes.number.isRequired,\r\n\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\r\n\r\n\tonEdge1Drag: PropTypes.func.isRequired,\r\n\tonEdge2Drag: PropTypes.func.isRequired,\r\n\tonDragStart: PropTypes.func.isRequired,\r\n\tonDrag: PropTypes.func.isRequired,\r\n\tonDragComplete: PropTypes.func.isRequired,\r\n\tonHover: PropTypes.func,\r\n\tonUnHover: PropTypes.func,\r\n\r\n\tdefaultClassName: PropTypes.string,\r\n\r\n\tr: PropTypes.number.isRequired,\r\n\twithEdge: PropTypes.bool.isRequired,\r\n\tchildren: PropTypes.func.isRequired,\r\n\ttolerance: PropTypes.number.isRequired,\r\n\tselected: PropTypes.bool.isRequired,\r\n\tfill: PropTypes.string.isRequired,\r\n\tfillOpacity: PropTypes.number.isRequired,\r\n};\r\n\r\nStraightLine.defaultProps = {\r\n\tonEdge1Drag: noop,\r\n\tonEdge2Drag: noop,\r\n\tonDragStart: noop,\r\n\tonDrag: noop,\r\n\tonDragComplete: noop,\r\n\r\n\tedgeStrokeWidth: 3,\r\n\tedgeStroke: \"#000000\",\r\n\tedgeFill: \"#FFFFFF\",\r\n\tr: 10,\r\n\twithEdge: false,\r\n\tstrokeWidth: 1,\r\n\tstrokeDasharray: \"Solid\",\r\n\tchildren: noop,\r\n\ttolerance: 7,\r\n\tselected: false,\r\n\tfill: \"#8AAFE2\",\r\n\tfillOpacity: 0.5,\r\n};\r\n\r\nexport default StraightLine;\r\n"]}