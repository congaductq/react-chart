{"version":3,"sources":["../../../../src/lib/interactive/wrapper/EachFullLine.js"],"names":["FullLine","props","handleLineDrag","bind","handleDragStart","handleChannelDrag","getEdgeCircle","handleHover","isHover","saveNodeType","nodes","state","hover","moreProps","hovering","setState","x","y","dragStart","index","onDrag","xScale","yScale","chartConfig","xAccessor","fullData","startPos","mouseXY","x1","y1","dx","dy","newX1Value","newY1Value","invert","xy","dragHandler","cursor","fill","edge","appearance","edgeStroke","edgeStrokeWidth","r","selected","onDragComplete","interactive","hoverText","type","edgeFill","stroke","strokeWidth","strokeOpacity","fillOpacity","hoverTextEnabled","enable","restHoverTextProps","hoverHandler","onHover","onUnHover","line1Edge","Component","propTypes","PropTypes","number","isRequired","bool","object","shape","string","edgeFill2","oneOf","func","defaultProps","yDisplayFormat","d","toFixed","noop"],"mappings":"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","file":"EachFullLine.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { isDefined, noop } from \"../../utils\";\r\nimport { getXValue } from \"../../utils/ChartDataUtil\";\r\nimport { saveNodeType, isHover } from \"../utils\";\r\n\r\nimport ClickableCircle from \"../components/ClickableCircle\";\r\nimport FullLineComponent from \"../components/FullLine\";\r\nimport HoverTextNearMouse from \"../components/HoverTextNearMouse\";\r\n\r\nclass FullLine extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.handleLineDrag = this.handleLineDrag.bind(this);\r\n\r\n\t\tthis.handleDragStart = this.handleDragStart.bind(this);\r\n\t\tthis.handleChannelDrag = this.handleChannelDrag.bind(this);\r\n\r\n\t\tthis.getEdgeCircle = this.getEdgeCircle.bind(this);\r\n\t\tthis.handleHover = this.handleHover.bind(this);\r\n\r\n\t\tthis.isHover = isHover.bind(this);\r\n\t\tthis.saveNodeType = saveNodeType.bind(this);\r\n\t\tthis.nodes = {};\r\n\r\n\t\tthis.state = {\r\n\t\t\thover: false,\r\n\t\t};\r\n\t}\r\n\thandleHover(moreProps) {\r\n\t\tif (this.state.hover !== moreProps.hovering) {\r\n\t\t\tthis.setState({\r\n\t\t\t\thover: moreProps.hovering\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thandleDragStart() {\r\n\t\tconst {\r\n\t\t\tx, y,\r\n\t\t} = this.props;\r\n\r\n\t\tthis.dragStart = {\r\n\t\t\tx, y,\r\n\t\t};\r\n\t}\r\n\thandleChannelDrag(moreProps) {\r\n\t\tconst { index, onDrag } = this.props;\r\n\r\n\t\tconst {\r\n\t\t\tx, y\r\n\t\t} = this.dragStart;\r\n\r\n\t\tconst { xScale, chartConfig: { yScale }, xAccessor, fullData } = moreProps;\r\n\t\tconst { startPos, mouseXY } = moreProps;\r\n\r\n\t\tconst x1 = xScale(x);\r\n\t\tconst y1 = yScale(y);\r\n\r\n\t\tconst dx = startPos[0] - mouseXY[0];\r\n\t\tconst dy = startPos[1] - mouseXY[1];\r\n\r\n\t\tconst newX1Value = getXValue(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\r\n\t\tconst newY1Value = yScale.invert(y1 - dy);\r\n\r\n\t\tonDrag(index, {\r\n\t\t\tx: newX1Value,\r\n\t\t\ty: newY1Value,\r\n\t\t});\r\n\t}\r\n\thandleLineDrag(moreProps) {\r\n\t\tconst { index, onDrag } = this.props;\r\n\t\tconst {\r\n\t\t\tx, y,\r\n\t\t} = this.dragStart;\r\n\r\n\t\tconst {\r\n\t\t\tstartPos, mouseXY, xAccessor,\r\n\t\t\txScale, fullData,\r\n\t\t\tchartConfig: { yScale }\r\n\t\t} = moreProps;\r\n\r\n\t\tconst dx = startPos[0] - mouseXY[0];\r\n\t\tconst dy = startPos[1] - mouseXY[1];\r\n\r\n\t\tconst x1 = xScale(x);\r\n\t\tconst y1 = yScale(y);\r\n\r\n\t\tconst newX1Value = getXValue(xScale, xAccessor, [x1 - dx, y1 - dy], fullData);\r\n\t\tconst newY1Value = yScale.invert(y1 - dy);\r\n\r\n\t\tonDrag(index, {\r\n\t\t\tx: newX1Value,\r\n\t\t\ty: newY1Value,\r\n\t\t});\r\n\t}\r\n\tgetEdgeCircle({ xy, dragHandler, cursor, fill, edge }) {\r\n\t\tconst { hover } = this.state;\r\n\t\tconst { appearance } = this.props;\r\n\t\tconst { edgeStroke, edgeStrokeWidth, r } = appearance;\r\n\t\tconst { selected } = this.props;\r\n\t\tconst { onDragComplete } = this.props;\r\n\r\n\t\treturn <ClickableCircle\r\n\t\t\tref={this.saveNodeType(edge)}\r\n\r\n\t\t\tshow={selected || hover}\r\n\t\t\tcx={xy[0]}\r\n\t\t\tcy={xy[1]}\r\n\t\t\tr={r}\r\n\t\t\tfill={fill}\r\n\t\t\tstroke={edgeStroke}\r\n\t\t\tstrokeWidth={edgeStrokeWidth}\r\n\t\t\tinteractiveCursorClass={cursor}\r\n\r\n\t\t\tonDragStart={this.handleDragStart}\r\n\t\t\tonDrag={dragHandler}\r\n\t\t\tonDragComplete={onDragComplete} />;\r\n\t}\r\n\trender() {\r\n\t\tconst { x, y, interactive, hoverText, appearance, onDragComplete, selected, type } = this.props;\r\n\t\tconst {\r\n\t\t\tedgeFill,\r\n\t\t\tstroke, strokeWidth, strokeOpacity,\r\n\t\t\tfill, fillOpacity,\r\n\t\t} = appearance;\r\n\t\tconst { hover } = this.state;\r\n\t\tconst { enable: hoverTextEnabled, ...restHoverTextProps } = hoverText;\r\n\r\n\t\tconst hoverHandler = interactive\r\n\t\t\t? { onHover: this.handleHover, onUnHover: this.handleHover }\r\n\t\t\t: {};\r\n\r\n\t\tconst line1Edge = isDefined(x) && isDefined(y)\r\n\t\t\t? <g>\r\n\t\t\t\t{this.getEdgeCircle({\r\n\t\t\t\t\txy: [x, y],\r\n\t\t\t\t\tdragHandler: this.handleLineDrag,\r\n\t\t\t\t\tcursor: \"react-stockcharts-move-cursor\",\r\n\t\t\t\t\tfill: edgeFill,\r\n\t\t\t\t\tedge: \"fullLineEdge\",\r\n\t\t\t\t})}\r\n\t\t\t</g>\r\n\t\t\t: null;\r\n\t\treturn <g>\r\n\t\t\t<FullLineComponent\r\n\t\t\t\tref={this.saveNodeType(\"fullLine\")}\r\n\t\t\t\tselected={selected || hover}\r\n\r\n\t\t\t\t{...hoverHandler}\r\n\t\t\t\ttype={type}\r\n\t\t\t\tstartXY={[x, y]}\r\n\t\t\t\tstroke={stroke}\r\n\t\t\t\tstrokeWidth={(hover || selected) ? strokeWidth + 1 : strokeWidth}\r\n\t\t\t\tstrokeOpacity={strokeOpacity}\r\n\t\t\t\tfill={fill}\r\n\t\t\t\tfillOpacity={fillOpacity}\r\n\t\t\t\tinteractiveCursorClass=\"react-stockcharts-move-cursor\"\r\n\t\t\t\tonDragStart={this.handleDragStart}\r\n\t\t\t\tonDrag={this.handleChannelDrag}\r\n\t\t\t\tonDragComplete={onDragComplete}\r\n\t\t\t/>\r\n\t\t\t{line1Edge}\r\n\t\t\t<HoverTextNearMouse\r\n\t\t\t\tshow={hoverTextEnabled && hover && !selected}\r\n\t\t\t\t{...restHoverTextProps} />\r\n\t\t</g>;\r\n\t}\r\n}\r\n\r\nFullLine.propTypes = {\r\n\tx: PropTypes.number.isRequired,\r\n\ty: PropTypes.number.isRequired,\r\n\tinteractive: PropTypes.bool.isRequired,\r\n\tselected: PropTypes.bool.isRequired,\r\n\thoverText: PropTypes.object.isRequired,\r\n\tappearance: PropTypes.shape({\r\n\t\tstroke: PropTypes.string.isRequired,\r\n\t\tfillOpacity: PropTypes.number.isRequired,\r\n\t\tstrokeOpacity: PropTypes.number.isRequired,\r\n\t\tstrokeWidth: PropTypes.number.isRequired,\r\n\t\tfill: PropTypes.string.isRequired,\r\n\t\tedgeStroke: PropTypes.string.isRequired,\r\n\t\tedgeFill: PropTypes.string.isRequired,\r\n\t\tedgeFill2: PropTypes.string.isRequired,\r\n\t\tedgeStrokeWidth: PropTypes.number.isRequired,\r\n\t\tr: PropTypes.number.isRequired,\r\n\t}).isRequired,\r\n\ttype: PropTypes.oneOf([\r\n\t\t\"VERTICAL\",\r\n\t\t\"HORIZONTAL\",\r\n\t]).isRequired,\r\n\tindex: PropTypes.number,\r\n\tonDrag: PropTypes.func.isRequired,\r\n\tonDragComplete: PropTypes.func.isRequired,\r\n};\r\n\r\nFullLine.defaultProps = {\r\n\tyDisplayFormat: d => d.toFixed(2),\r\n\tinteractive: true,\r\n\tselected: false,\r\n\r\n\tonDrag: noop,\r\n\tonDragComplete: noop,\r\n\thoverText: {\r\n\t\tenable: false,\r\n\t}\r\n};\r\n\r\nexport default FullLine;"]}