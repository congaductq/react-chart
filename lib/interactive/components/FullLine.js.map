{"version":3,"sources":["../../../../src/lib/interactive/components/FullLine.js"],"names":["FullLine","props","renderSVG","bind","drawOnCanvas","isHover","moreProps","tolerance","onHover","startXY","type","mouseXY","xScale","yScale","chartConfig","x1","y1","lineHover","x1Value","y1Value","x2Value","y2Value","ctx","stroke","strokeWidth","strokeOpacity","line","helper","x2","y2","lineWidth","strokeStyle","beginPath","moveTo","lineTo","line1","line2","area","getPath","selected","interactiveCursorClass","onDragStart","onDrag","onDragComplete","onUnHover","getMouseCanvas","Component","closePath","toString","propTypes","PropTypes","string","isRequired","number","fill","fillOpacity","oneOf","func","defaultClassName","bool","defaultProps","noop"],"mappings":"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","file":"FullLine.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { path as d3Path } from \"d3-path\";\r\n\r\nimport GenericChartComponent from \"../../GenericChartComponent\";\r\nimport { getMouseCanvas } from \"../../GenericComponent\";\r\nimport { isHovering } from \"./StraightLine\";\r\n\r\nimport { isDefined, noop, hexToRGBA } from \"../../utils\";\r\n\r\nclass FullLine extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.renderSVG = this.renderSVG.bind(this);\r\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\r\n\t\tthis.isHover = this.isHover.bind(this);\r\n\t}\r\n\tisHover(moreProps) {\r\n\t\tconst { tolerance, onHover, startXY, type } = this.props;\r\n\t\tconst { mouseXY, xScale, chartConfig: { yScale } } = moreProps;\r\n\t\tif (isDefined(onHover) && isDefined(startXY)) {\r\n\t\t\tconst [x1, y1] = startXY;\r\n\t\t\tif (type === \"VERTICAL\") {\r\n\t\t\t\tconst lineHover = isHovering({\r\n\t\t\t\t\tx1Value: x1,\r\n\t\t\t\t\ty1Value: y1 - 10000,\r\n\t\t\t\t\tx2Value: x1,\r\n\t\t\t\t\ty2Value: y1 + 10000,\r\n\t\t\t\t\ttype: \"LINE\",\r\n\t\t\t\t\tmouseXY,\r\n\t\t\t\t\ttolerance,\r\n\t\t\t\t\txScale,\r\n\t\t\t\t\tyScale,\r\n\t\t\t\t});\r\n\t\t\t\treturn lineHover;\r\n\t\t\t} else if (type === \"HORIZONTAL\") {\r\n\t\t\t\tconst lineHover = isHovering({\r\n\t\t\t\t\tx1Value: x1 - 5000,\r\n\t\t\t\t\ty1Value: y1,\r\n\t\t\t\t\tx2Value: x1 + 5000,\r\n\t\t\t\t\ty2Value: y1,\r\n\t\t\t\t\ttype: \"LINE\",\r\n\t\t\t\t\tmouseXY,\r\n\t\t\t\t\ttolerance,\r\n\t\t\t\t\txScale,\r\n\t\t\t\t\tyScale,\r\n\t\t\t\t});\r\n\t\t\t\treturn lineHover;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tdrawOnCanvas(ctx, moreProps) {\r\n\t\tconst { stroke, strokeWidth, strokeOpacity } = this.props;\r\n\t\tconst line = helper(this.props, moreProps);\r\n\r\n\t\tif (isDefined(line)) {\r\n\t\t\tconst { x1, y1, x2, y2 } = line;\r\n\t\t\tctx.lineWidth = strokeWidth;\r\n\t\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.moveTo(x1, y1);\r\n\t\t\tctx.lineTo(x2, y2);\r\n\t\t\tctx.stroke();\r\n\t\t}\r\n\t}\r\n\trenderSVG(moreProps) {\r\n\t\tconst { stroke, strokeWidth, strokeOpacity } = this.props;\r\n\t\tconst { line1, line2 } = helper(this.props, moreProps);\r\n\r\n\t\tif (isDefined(line1)) {\r\n\t\t\tconst { x1, y1, x2, y2 } = line1;\r\n\t\t\tconst line = isDefined(line2)\r\n\t\t\t\t? <line\r\n\t\t\t\t\tstrokeWidth={strokeWidth}\r\n\t\t\t\t\tstroke={stroke}\r\n\t\t\t\t\tstrokeOpacity={strokeOpacity}\r\n\t\t\t\t\tx1={x1}\r\n\t\t\t\t\ty1={line2.y1}\r\n\t\t\t\t\tx2={x2}\r\n\t\t\t\t\ty2={line2.y2}\r\n\t\t\t\t/>\r\n\t\t\t\t: null;\r\n\t\t\tconst area = isDefined(line2)\r\n\t\t\t\t? <path\r\n\t\t\t\t\td={getPath(line1, line2)}\r\n\t\t\t\t/>\r\n\t\t\t\t: null;\r\n\r\n\t\t\treturn (\r\n\t\t\t\t<g>\r\n\t\t\t\t\t<line\r\n\t\t\t\t\t\tstrokeWidth={strokeWidth}\r\n\t\t\t\t\t\tstroke={stroke}\r\n\t\t\t\t\t\tstrokeOpacity={strokeOpacity}\r\n\t\t\t\t\t\tx1={x1}\r\n\t\t\t\t\t\ty1={y1}\r\n\t\t\t\t\t\tx2={x2}\r\n\t\t\t\t\t\ty2={y2}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t{line}\r\n\t\t\t\t\t{area}\r\n\t\t\t\t</g>\r\n\t\t\t);\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst { selected, interactiveCursorClass } = this.props;\r\n\t\tconst { onDragStart, onDrag, onDragComplete, onHover, onUnHover } = this.props;\r\n\t\treturn <GenericChartComponent\r\n\t\t\tisHover={this.isHover}\r\n\r\n\t\t\tsvgDraw={this.renderSVG}\r\n\t\t\tcanvasToDraw={getMouseCanvas}\r\n\t\t\tcanvasDraw={this.drawOnCanvas}\r\n\r\n\t\t\tinteractiveCursorClass={interactiveCursorClass}\r\n\t\t\tselected={selected}\r\n\r\n\t\t\tonDragStart={onDragStart}\r\n\t\t\tonDrag={onDrag}\r\n\t\t\tonDragComplete={onDragComplete}\r\n\t\t\tonHover={onHover}\r\n\t\t\tonUnHover={onUnHover}\r\n\r\n\t\t\tdrawOn={[\"mousemove\", \"mouseleave\", \"pan\", \"drag\"]}\r\n\t\t/>;\r\n\t}\r\n}\r\nfunction getPath(line1, line2) {\r\n\tconst ctx = d3Path();\r\n\tctx.moveTo(line1.x1, line1.y1);\r\n\tctx.lineTo(line1.x2, line1.y2);\r\n\tctx.lineTo(line1.x2, line2.y2);\r\n\tctx.lineTo(line1.x1, line2.y1);\r\n\r\n\tctx.closePath();\r\n\treturn ctx.toString();\r\n}\r\n\r\nfunction helper(props, moreProps) {\r\n\tconst { xScale, chartConfig: { yScale } } = moreProps;\r\n\tconst { startXY, type } = props;\r\n\tconst [x1Value, y1Value] = startXY;\r\n\tlet x1, x2, y1, y2;\r\n\tif (type === \"VERTICAL\") {\r\n\t\tx1 = xScale(x1Value);\r\n\t\ty1 = yScale(y1Value - 10000);\r\n\t\tx2 = xScale(x1Value);\r\n\t\ty2 = yScale(y1Value + 10000);\r\n\t} else if (type === \"HORIZONTAL\") {\r\n\t\tx1 = xScale(x1Value - 5000);\r\n\t\ty1 = yScale(y1Value);\r\n\t\tx2 = xScale(x1Value + 5000);\r\n\t\ty2 = yScale(y1Value);\r\n\t}\r\n\treturn { x1, y1, x2, y2 };\r\n}\r\n\r\nFullLine.propTypes = {\r\n\tstartXY: PropTypes.string,\r\n\tinteractiveCursorClass: PropTypes.string,\r\n\tstroke: PropTypes.string.isRequired,\r\n\tstrokeWidth: PropTypes.number.isRequired,\r\n\tfill: PropTypes.string.isRequired,\r\n\tfillOpacity: PropTypes.number.isRequired,\r\n\tstrokeOpacity: PropTypes.number.isRequired,\r\n\r\n\ttype: PropTypes.oneOf([\r\n\t\t\"VERTICAL\",\r\n\t\t\"HORIZONTAL\",\r\n\t]).isRequired,\r\n\r\n\tonDragStart: PropTypes.func.isRequired,\r\n\tonDrag: PropTypes.func.isRequired,\r\n\tonDragComplete: PropTypes.func.isRequired,\r\n\tonHover: PropTypes.func,\r\n\tonUnHover: PropTypes.func,\r\n\r\n\tdefaultClassName: PropTypes.string,\r\n\r\n\ttolerance: PropTypes.number.isRequired,\r\n\tselected: PropTypes.bool.isRequired,\r\n};\r\n\r\nFullLine.defaultProps = {\r\n\tonDragStart: noop,\r\n\tonDrag: noop,\r\n\tonDragComplete: noop,\r\n\r\n\tstrokeWidth: 1,\r\n\ttolerance: 4,\r\n\tselected: false,\r\n};\r\n\r\nexport default FullLine;"]}