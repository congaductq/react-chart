{"version":3,"sources":["../../../../src/lib/interactive/components/ClickableShape.js"],"names":["ClickableShape","props","saveNode","bind","drawOnCanvas","isHover","node","moreProps","mouseXY","closeIcon","textBox","x","y","halfWidth","width","start1","end1","start2","end2","ctx","stroke","strokeWidth","strokeOpacity","hovering","helper","beginPath","lineWidth","strokeStyle","moveTo","lineTo","Error","interactiveCursorClass","show","onHover","onUnHover","onClick","renderSVG","getMouseCanvas","Component","yValue","text","fontFamily","fontStyle","fontWeight","fontSize","font","yScale","chartConfig","left","padding","measureText","right","propTypes","PropTypes","string","isRequired","number","object","bool","func","defaultProps","fillOpacity"],"mappings":";;;;;;;;;;AAAA;;;;AACA;;;;AAEA;;;;AACA;;AAEA;;AACA;;;;;;;;;;IAEMA,c;;;AACL,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,8HACZA,KADY;;AAElB,QAAKC,QAAL,GAAgB,MAAKA,QAAL,CAAcC,IAAd,OAAhB;AACA,QAAKC,YAAL,GAAoB,MAAKA,YAAL,CAAkBD,IAAlB,OAApB;AACA,QAAKE,OAAL,GAAe,MAAKA,OAAL,CAAaF,IAAb,OAAf;AAJkB;AAKlB;;;;2BACQG,I,EAAM;AACd,QAAKA,IAAL,GAAYA,IAAZ;AACA;;;0BACOC,S,EAAW;AAAA,OACVC,OADU,GACED,SADF,CACVC,OADU;;AAElB,OAAI,KAAKC,SAAT,EAAoB;AAAA,QACXC,OADW,GACC,KAAKT,KADN,CACXS,OADW;AAAA,qBAEF,KAAKD,SAFH;AAAA,QAEXE,CAFW,cAEXA,CAFW;AAAA,QAERC,CAFQ,cAERA,CAFQ;;AAGnB,QAAMC,YAAYH,QAAQD,SAAR,CAAkBK,KAAlB,GAA0B,CAA5C;;AAEA,QAAMC,SAAS,CAACJ,IAAIE,SAAL,EAAgBD,IAAIC,SAApB,CAAf;AACA,QAAMG,OAAO,CAACL,IAAIE,SAAL,EAAgBD,IAAIC,SAApB,CAAb;AACA,QAAMI,SAAS,CAACN,IAAIE,SAAL,EAAgBD,IAAIC,SAApB,CAAf;AACA,QAAMK,OAAO,CAACP,IAAIE,SAAL,EAAgBD,IAAIC,SAApB,CAAb;;AAEA,QAAI,+BAAYE,MAAZ,EAAoBC,IAApB,EAA0BR,OAA1B,EAAmC,CAAnC,KAAyC,+BAAYS,MAAZ,EAAoBC,IAApB,EAA0BV,OAA1B,EAAmC,CAAnC,CAA7C,EAAoF;AACnF,YAAO,IAAP;AACA;AACD;AACD,UAAO,KAAP;AACA;;;+BACYW,G,EAAKZ,S,EAAW;AAAA,gBACsC,KAAKN,KAD3C;AAAA,OACpBmB,MADoB,UACpBA,MADoB;AAAA,OACZC,WADY,UACZA,WADY;AAAA,OACCC,aADD,UACCA,aADD;AAAA,OACgBC,QADhB,UACgBA,QADhB;AAAA,OAC0Bb,OAD1B,UAC0BA,OAD1B;;AAAA,iBAGbc,OAAO,KAAKvB,KAAZ,EAAmBM,SAAnB,EAA8BY,GAA9B,CAHa;AAAA;AAAA,OAGrBR,CAHqB;AAAA,OAGlBC,CAHkB;;AAK5B,QAAKH,SAAL,GAAiB,EAAEE,IAAF,EAAKC,IAAL,EAAjB;AACAO,OAAIM,SAAJ;;AAEAN,OAAIO,SAAJ,GAAgBH,WAAWF,cAAc,CAAzB,GAA6BA,WAA7C;AACAF,OAAIQ,WAAJ,GAAkB,sBAAUP,MAAV,EAAkBE,aAAlB,CAAlB;AACA,OAAMT,YAAYH,QAAQD,SAAR,CAAkBK,KAAlB,GAA0B,CAA5C;AACAK,OAAIS,MAAJ,CAAWjB,IAAIE,SAAf,EAA0BD,IAAIC,SAA9B;AACAM,OAAIU,MAAJ,CAAWlB,IAAIE,SAAf,EAA0BD,IAAIC,SAA9B;AACAM,OAAIS,MAAJ,CAAWjB,IAAIE,SAAf,EAA0BD,IAAIC,SAA9B;AACAM,OAAIU,MAAJ,CAAWlB,IAAIE,SAAf,EAA0BD,IAAIC,SAA9B;AACAM,OAAIC,MAAJ;AACA;;;8BACW;AACX,SAAM,IAAIU,KAAJ,CAAU,qBAAV,CAAN;AACA;;;2BACQ;AAAA,OACAC,sBADA,GAC2B,KAAK9B,KADhC,CACA8B,sBADA;AAAA,OAEAC,IAFA,GAES,KAAK/B,KAFd,CAEA+B,IAFA;AAAA,iBAGgC,KAAK/B,KAHrC;AAAA,OAGAgC,OAHA,WAGAA,OAHA;AAAA,OAGSC,SAHT,WAGSA,SAHT;AAAA,OAGoBC,OAHpB,WAGoBA,OAHpB;;;AAKR,UAAOH,OACJ,8BAAC,+BAAD,IAAuB,KAAK,KAAK9B,QAAjC;AACD,4BAAwB6B,sBADvB;AAED,aAAS,KAAK1B,OAFb;;AAID,sBAAkB8B,OAJjB;;AAMD,aAAS,KAAKC,SANb;;AAQD,gBAAY,KAAKhC,YARhB;AASD,kBAAciC,gCATb;;AAWD,aAASJ,OAXR;AAYD,eAAWC,SAZV;;AAcD,YAAQ,CAAC,KAAD,EAAQ,WAAR,EAAqB,MAArB;AAdP,KADI,GAiBJ,IAjBH;AAkBA;;;;EAvE2BI,gB;;AA0E7B,SAASd,MAAT,CAAgBvB,KAAhB,EAAuBM,SAAvB,EAAkCY,GAAlC,EAAuC;AAAA,KAC9BoB,MAD8B,GACJtC,KADI,CAC9BsC,MAD8B;AAAA,KACtBC,IADsB,GACJvC,KADI,CACtBuC,IADsB;AAAA,KAChB9B,OADgB,GACJT,KADI,CAChBS,OADgB;AAAA,KAE9B+B,UAF8B,GAEkBxC,KAFlB,CAE9BwC,UAF8B;AAAA,KAElBC,SAFkB,GAEkBzC,KAFlB,CAElByC,SAFkB;AAAA,KAEPC,UAFO,GAEkB1C,KAFlB,CAEP0C,UAFO;AAAA,KAEKC,QAFL,GAEkB3C,KAFlB,CAEK2C,QAFL;;AAGtCzB,KAAI0B,IAAJ,GAAcH,SAAd,SAA2BC,UAA3B,SAAyCC,QAAzC,WAAuDH,UAAvD;;AAHsC,KAKfK,MALe,GAKFvC,SALE,CAK9BwC,WAL8B,CAKfD,MALe;;;AAOtC,KAAMnC,IAAID,QAAQsC,IAAR,GACPtC,QAAQuC,OAAR,CAAgBD,IADT,GAEP7B,IAAI+B,WAAJ,CAAgBV,IAAhB,EAAsB1B,KAFf,GAGPJ,QAAQuC,OAAR,CAAgBE,KAHT,GAIPzC,QAAQD,SAAR,CAAkBwC,OAAlB,CAA0BD,IAJnB,GAKPtC,QAAQD,SAAR,CAAkBK,KAAlB,GAA0B,CAL7B;;AAOA,KAAMF,IAAIkC,OAAOP,MAAP,CAAV;;AAEA,QAAO,CAAC5B,CAAD,EAAIC,CAAJ,CAAP;AAEA;;AAEDZ,eAAeoD,SAAf,GAA2B;AAC1BhC,SAAQiC,oBAAUC,MAAV,CAAiBC,UADC;AAE1BjC,gBAAe+B,oBAAUG,MAAV,CAAiBD,UAFN;AAG1BlC,cAAagC,oBAAUG,MAAV,CAAiBD,UAHJ;AAI1B7C,UAAS2C,oBAAUI,MAAV,CAAiBF,UAJA;AAK1BhC,WAAU8B,oBAAUK,IALM;AAM1B3B,yBAAwBsB,oBAAUC,MANR;AAO1BtB,OAAMqB,oBAAUK,IAPU;AAQ1BzB,UAASoB,oBAAUM,IARO;AAS1BzB,YAAWmB,oBAAUM,IATK;AAU1BxB,UAASkB,oBAAUM;AAVO,CAA3B;;AAcA3D,eAAe4D,YAAf,GAA8B;AAC7B5B,OAAM,KADuB;AAE7B6B,cAAa,CAFgB;AAG7BvC,gBAAe,CAHc;AAI7BD,cAAa;AAJgB,CAA9B;;kBAOerB,c","file":"ClickableShape.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport GenericChartComponent from \"../../GenericChartComponent\";\r\nimport { getMouseCanvas } from \"../../GenericComponent\";\r\n\r\nimport { isHovering2 } from \"./StraightLine\";\r\nimport { hexToRGBA } from \"../../utils\";\r\n\r\nclass ClickableShape extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.saveNode = this.saveNode.bind(this);\r\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\r\n\t\tthis.isHover = this.isHover.bind(this);\r\n\t}\r\n\tsaveNode(node) {\r\n\t\tthis.node = node;\r\n\t}\r\n\tisHover(moreProps) {\r\n\t\tconst { mouseXY } = moreProps;\r\n\t\tif (this.closeIcon) {\r\n\t\t\tconst { textBox } = this.props;\r\n\t\t\tconst { x, y } = this.closeIcon;\r\n\t\t\tconst halfWidth = textBox.closeIcon.width / 2;\r\n\r\n\t\t\tconst start1 = [x - halfWidth, y - halfWidth];\r\n\t\t\tconst end1 = [x + halfWidth, y + halfWidth];\r\n\t\t\tconst start2 = [x - halfWidth, y + halfWidth];\r\n\t\t\tconst end2 = [x + halfWidth, y - halfWidth];\r\n\r\n\t\t\tif (isHovering2(start1, end1, mouseXY, 3) || isHovering2(start2, end2, mouseXY, 3)) {\r\n\t\t\t\treturn true;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn false;\r\n\t}\r\n\tdrawOnCanvas(ctx, moreProps) {\r\n\t\tconst { stroke, strokeWidth, strokeOpacity, hovering, textBox } = this.props;\r\n\r\n\t\tconst [x, y] = helper(this.props, moreProps, ctx);\r\n\r\n\t\tthis.closeIcon = { x, y };\r\n\t\tctx.beginPath();\r\n\r\n\t\tctx.lineWidth = hovering ? strokeWidth + 1 : strokeWidth;\r\n\t\tctx.strokeStyle = hexToRGBA(stroke, strokeOpacity);\r\n\t\tconst halfWidth = textBox.closeIcon.width / 2;\r\n\t\tctx.moveTo(x - halfWidth, y - halfWidth);\r\n\t\tctx.lineTo(x + halfWidth, y + halfWidth);\r\n\t\tctx.moveTo(x - halfWidth, y + halfWidth);\r\n\t\tctx.lineTo(x + halfWidth, y - halfWidth);\r\n\t\tctx.stroke();\r\n\t}\r\n\trenderSVG() {\r\n\t\tthrow new Error(\"svg not implemented\");\r\n\t}\r\n\trender() {\r\n\t\tconst { interactiveCursorClass } = this.props;\r\n\t\tconst { show } = this.props;\r\n\t\tconst { onHover, onUnHover, onClick } = this.props;\r\n\r\n\t\treturn show\r\n\t\t\t? <GenericChartComponent ref={this.saveNode}\r\n\t\t\t\tinteractiveCursorClass={interactiveCursorClass}\r\n\t\t\t\tisHover={this.isHover}\r\n\r\n\t\t\t\tonClickWhenHover={onClick}\r\n\r\n\t\t\t\tsvgDraw={this.renderSVG}\r\n\r\n\t\t\t\tcanvasDraw={this.drawOnCanvas}\r\n\t\t\t\tcanvasToDraw={getMouseCanvas}\r\n\r\n\t\t\t\tonHover={onHover}\r\n\t\t\t\tonUnHover={onUnHover}\r\n\r\n\t\t\t\tdrawOn={[\"pan\", \"mousemove\", \"drag\"]}\r\n\t\t\t/>\r\n\t\t\t: null;\r\n\t}\r\n}\r\n\r\nfunction helper(props, moreProps, ctx) {\r\n\tconst { yValue, text, textBox } = props;\r\n\tconst { fontFamily, fontStyle, fontWeight, fontSize } = props;\r\n\tctx.font = `${fontStyle} ${fontWeight} ${fontSize}px ${fontFamily}`;\r\n\r\n\tconst { chartConfig: { yScale } } = moreProps;\r\n\r\n\tconst x = textBox.left\r\n\t\t+ textBox.padding.left\r\n\t\t+ ctx.measureText(text).width\r\n\t\t+ textBox.padding.right\r\n\t\t+ textBox.closeIcon.padding.left\r\n\t\t+ textBox.closeIcon.width / 2;\r\n\r\n\tconst y = yScale(yValue);\r\n\r\n\treturn [x, y];\r\n\r\n}\r\n\r\nClickableShape.propTypes = {\r\n\tstroke: PropTypes.string.isRequired,\r\n\tstrokeOpacity: PropTypes.number.isRequired,\r\n\tstrokeWidth: PropTypes.number.isRequired,\r\n\ttextBox: PropTypes.object.isRequired,\r\n\thovering: PropTypes.bool,\r\n\tinteractiveCursorClass: PropTypes.string,\r\n\tshow: PropTypes.bool,\r\n\tonHover: PropTypes.func,\r\n\tonUnHover: PropTypes.func,\r\n\tonClick: PropTypes.func,\r\n};\r\n\r\n\r\nClickableShape.defaultProps = {\r\n\tshow: false,\r\n\tfillOpacity: 1,\r\n\tstrokeOpacity: 1,\r\n\tstrokeWidth: 1,\r\n};\r\n\r\nexport default ClickableShape;\r\n"]}