{"version":3,"sources":["../../../../../src/lib/interactive/wrapper/EachFreeLine.js"],"names":["React","Component","PropTypes","ascending","d3Ascending","noop","strokeDashTypes","saveNodeType","isHover","getXValue","FreeLineComponent","ClickableCircle","HoverTextNearMouse","EachTrendLine","props","handleEdge1Drag","bind","handleEdge2Drag","handleLineDragStart","handleLineDrag","handleEdge1DragStart","handleEdge2DragStart","handleDragComplete","handleHover","nodes","state","hover","positionList","dragStart","moreProps","index","onDrag","xScale","yScale","chartConfig","xAccessor","fullData","startPos","mouseXY","convertedList","Array","forEach","push","element","dx","dy","posList","map","x","invert","setState","anchor","undefined","onDragComplete","x2Value","y2Value","getNewXY","x1Value","y1Value","hovering","stroke","strokeWidth","strokeOpacity","strokeDasharray","r","edgeStrokeWidth","edgeFill","fill","fillOpacity","edgeStroke","edgeInteractiveCursor","lineInteractiveCursor","hoverText","selected","hoverTextEnabled","enable","restHoverTextProps","length","plotData","mouseY","domain","slice","sort","small","big","y","newY","Math","min","max","propTypes","arrayOf","any","isRequired","number","func","onEdge1Drag","onEdge2Drag","onSelect","onUnSelect","defaultClassName","string","bool","oneOf","object","defaultProps"],"mappings":"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","file":"EachFreeLine.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { ascending as d3Ascending } from \"d3-array\";\r\nimport { noop, strokeDashTypes } from \"../../utils\";\r\nimport { saveNodeType, isHover } from \"../utils\";\r\nimport { getXValue } from \"../../utils/ChartDataUtil\";\r\n\r\nimport FreeLineComponent from \"../components/FreeLine\";\r\nimport ClickableCircle from \"../components/ClickableCircle\";\r\nimport HoverTextNearMouse from \"../components/HoverTextNearMouse\";\r\n\r\nclass EachTrendLine extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.handleEdge1Drag = this.handleEdge1Drag.bind(this);\r\n\t\tthis.handleEdge2Drag = this.handleEdge2Drag.bind(this);\r\n\t\tthis.handleLineDragStart = this.handleLineDragStart.bind(this);\r\n\t\tthis.handleLineDrag = this.handleLineDrag.bind(this);\r\n\r\n\t\tthis.handleEdge1DragStart = this.handleEdge1DragStart.bind(this);\r\n\t\tthis.handleEdge2DragStart = this.handleEdge2DragStart.bind(this);\r\n\r\n\t\tthis.handleDragComplete = this.handleDragComplete.bind(this);\r\n\r\n\t\tthis.handleHover = this.handleHover.bind(this);\r\n\r\n\t\tthis.isHover = isHover.bind(this);\r\n\t\tthis.saveNodeType = saveNodeType.bind(this);\r\n\t\tthis.nodes = {};\r\n\r\n\t\tthis.state = {\r\n\t\t\thover: false,\r\n\t\t};\r\n\t}\r\n\thandleLineDragStart() {\r\n\t\tconst {\r\n\t\t\tpositionList\r\n\t\t} = this.props;\r\n\r\n\t\tthis.dragStart = {\r\n      positionList\r\n\t\t};\r\n\t}\r\n\thandleLineDrag(moreProps) {\r\n\t\tconst { index, onDrag } = this.props;\r\n\r\n\t\tconst {\r\n      positionList\r\n\t\t} = this.dragStart;\r\n\r\n\t\tconst { xScale, chartConfig: { yScale }, xAccessor, fullData } = moreProps;\r\n\t\tconst { startPos, mouseXY } = moreProps;\r\n    const convertedList = new Array();\r\n    positionList.forEach(element => {\r\n      convertedList.push([xScale(element[0]), yScale(element[1])]);\r\n    });\r\n\t\tconst dx = startPos[0] - mouseXY[0];\r\n    const dy = startPos[1] - mouseXY[1];\r\n    const posList = convertedList.map(x => {\r\n      return (\r\n        [getXValue(xScale, xAccessor, [x[0] - dx, x[1] - dy], fullData),  yScale.invert(x[1] - dy)]\r\n      )\r\n    })\r\n\r\n\t\tonDrag(index, {\r\n\t\t\tpositionList: posList,\r\n\t\t});\r\n\t}\r\n\thandleEdge1DragStart() {\r\n\t\tthis.setState({\r\n\t\t\tanchor: \"edge2\"\r\n\t\t});\r\n\t}\r\n\thandleEdge2DragStart() {\r\n\t\tthis.setState({\r\n\t\t\tanchor: \"edge1\"\r\n\t\t});\r\n\t}\r\n\thandleDragComplete(...rest) {\r\n\t\tthis.setState({\r\n\t\t\tanchor: undefined\r\n\t\t});\r\n\t\tthis.props.onDragComplete(...rest);\r\n\t}\r\n\thandleEdge1Drag(moreProps) {\r\n\t\tconst { index, onDrag } = this.props;\r\n\t\tconst {\r\n\t\t\tx2Value, y2Value,\r\n\t\t} = this.props;\r\n\r\n\t\tconst [x1Value, y1Value] = getNewXY(moreProps);\r\n\r\n\t\tonDrag(index, {\r\n\t\t\tx1Value,\r\n\t\t\ty1Value,\r\n\t\t\tx2Value,\r\n\t\t\ty2Value,\r\n\t\t});\r\n\t}\r\n\thandleEdge2Drag(moreProps) {\r\n\t\tconst { index, onDrag } = this.props;\r\n\t\tconst {\r\n\t\t\tx1Value, y1Value,\r\n\t\t} = this.props;\r\n\r\n\t\tconst [x2Value, y2Value] = getNewXY(moreProps);\r\n\r\n\t\tonDrag(index, {\r\n\t\t\tx1Value,\r\n\t\t\ty1Value,\r\n\t\t\tx2Value,\r\n\t\t\ty2Value,\r\n\t\t});\r\n\t}\r\n\thandleHover(moreProps) {\r\n\t\tif (this.state.hover !== moreProps.hovering) {\r\n\t\t\tthis.setState({\r\n\t\t\t\thover: moreProps.hovering\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst {\r\n\t\t\tpositionList,\r\n\t\t\tstroke,\r\n\t\t\tstrokeWidth,\r\n\t\t\tstrokeOpacity,\r\n\t\t\tstrokeDasharray,\r\n\t\t\tr,\r\n\t\t\tedgeStrokeWidth,\r\n\t\t\tedgeFill,\r\n\t\t\tfill,\r\n\t\t\tfillOpacity,\r\n\t\t\tedgeStroke,\r\n\t\t\tedgeInteractiveCursor,\r\n\t\t\tlineInteractiveCursor,\r\n\t\t\thoverText,\r\n\t\t\tselected,\r\n\t\t\tonDragComplete,\r\n    } = this.props;\r\n\t\tconst { hover, anchor } = this.state;\r\n\t\t// console.log(\"SELECTED ->\", selected);\r\n\t\tconst { enable: hoverTextEnabled, ...restHoverTextProps } = hoverText;\r\n\r\n\t\treturn <g>\r\n\t\t\t<FreeLineComponent\r\n\t\t\t\tref={this.saveNodeType(\"line\")}\r\n\t\t\t\tselected={selected || hover}\r\n\t\t\t\tonHover={this.handleHover}\r\n\t\t\t\tonUnHover={this.handleHover}\r\n\t\t\t\tpositionList={positionList}\r\n\t\t\t\tstroke={stroke}\r\n\t\t\t\tfill={fill}\r\n\t\t\t\tfillOpacity={fillOpacity}\r\n\t\t\t\tstrokeWidth={(hover || selected) ? strokeWidth + 1 : strokeWidth}\r\n\t\t\t\tstrokeOpacity={strokeOpacity}\r\n\t\t\t\tstrokeDasharray={strokeDasharray}\r\n\t\t\t\tinteractiveCursorClass={lineInteractiveCursor}\r\n\t\t\t\tonDragStart={this.handleLineDragStart}\r\n\t\t\t\tonDrag={this.handleLineDrag}\r\n\t\t\t\tonDragComplete={onDragComplete} />\r\n\t\t\t<ClickableCircle\r\n\t\t\t\tref={this.saveNodeType(\"edge1\")}\r\n\t\t\t\tshow={selected || hover}\r\n\t\t\t\tcx={positionList[0][0]}\r\n\t\t\t\tcy={positionList[0][1]}\r\n\t\t\t\tr={r}\r\n\t\t\t\tfill={edgeFill}\r\n\t\t\t\tstroke={anchor === \"edge1\" ? stroke : edgeStroke}\r\n\t\t\t\tstrokeWidth={edgeStrokeWidth}\r\n\t\t\t\tstrokeOpacity={1}\r\n\t\t\t\tinteractiveCursorClass={edgeInteractiveCursor}\r\n\t\t\t\tonDragStart={this.handleLineDragStart}\r\n\t\t\t\tonDrag={this.handleLineDrag}\r\n\t\t\t\tonDragComplete={this.handleDragComplete} />\r\n\t\t\t<ClickableCircle\r\n\t\t\t\tref={this.saveNodeType(\"edge2\")}\r\n\t\t\t\tshow={selected || hover}\r\n\t\t\t\tcx={positionList[positionList.length - 1][0]}\r\n\t\t\t\tcy={positionList[positionList.length - 1][1]}\r\n\t\t\t\tr={r}\r\n\t\t\t\tfill={edgeFill}\r\n\t\t\t\tstroke={anchor === \"edge2\" ? stroke : edgeStroke}\r\n\t\t\t\tstrokeWidth={edgeStrokeWidth}\r\n\t\t\t\tstrokeOpacity={1}\r\n\t\t\t\tinteractiveCursorClass={edgeInteractiveCursor}\r\n\t\t\t\tonDragStart={this.handleLineDragStart}\r\n\t\t\t\tonDrag={this.handleLineDrag}\r\n\t\t\t\tonDragComplete={this.handleDragComplete} />\r\n\t\t\t<HoverTextNearMouse\r\n\t\t\t\tshow={hoverTextEnabled && hover && !selected}\r\n\t\t\t\t{...restHoverTextProps} />\r\n\t\t</g>;\r\n\t}\r\n}\r\n\r\nexport function getNewXY(moreProps) {\r\n\tconst { xScale, chartConfig: { yScale }, xAccessor, plotData, mouseXY } = moreProps;\r\n\tconst mouseY = mouseXY[1];\r\n\r\n\tconst x = getXValue(xScale, xAccessor, mouseXY, plotData);\r\n\r\n\tconst [small, big] = yScale.domain().slice().sort(d3Ascending);\r\n\tconst y = yScale.invert(mouseY);\r\n\tconst newY = Math.min(Math.max(y, small), big);\r\n\treturn [x, newY];\r\n}\r\n\r\nEachTrendLine.propTypes = {\r\n\tpositionList: PropTypes.arrayOf(PropTypes.any).isRequired,\r\n\tindex: PropTypes.number,\r\n\tonDrag: PropTypes.func.isRequired,\r\n\tonEdge1Drag: PropTypes.func.isRequired,\r\n\tonEdge2Drag: PropTypes.func.isRequired,\r\n\tonDragComplete: PropTypes.func.isRequired,\r\n\tonSelect: PropTypes.func.isRequired,\r\n\tonUnSelect: PropTypes.func.isRequired,\r\n\r\n\tr: PropTypes.number.isRequired,\r\n\tstrokeOpacity: PropTypes.number.isRequired,\r\n\tdefaultClassName: PropTypes.string,\r\n\r\n\tselected: PropTypes.bool,\r\n\r\n\tstroke: PropTypes.string.isRequired,\r\n\tstrokeWidth: PropTypes.number.isRequired,\r\n\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\r\n\r\n\tedgeStrokeWidth: PropTypes.number.isRequired,\r\n\tedgeStroke: PropTypes.string.isRequired,\r\n\tedgeInteractiveCursor: PropTypes.string.isRequired,\r\n\tlineInteractiveCursor: PropTypes.string.isRequired,\r\n\tedgeFill: PropTypes.string.isRequired,\r\n\thoverText: PropTypes.object.isRequired,\r\n\tfill: PropTypes.string.isRequired,\r\n\tfillOpacity: PropTypes.number.isRequired,\r\n};\r\n\r\nEachTrendLine.defaultProps = {\r\n\tonDrag: noop,\r\n\tonEdge1Drag: noop,\r\n\tonEdge2Drag: noop,\r\n\tonDragComplete: noop,\r\n\tonSelect: noop,\r\n\tonUnSelect: noop,\r\n\r\n\tselected: false,\r\n\r\n\tedgeStroke: \"#000000\",\r\n\tedgeFill: \"#FFFFFF\",\r\n\tfill: \"#8AAFE2\",\r\n\tfillOpacity: 0.5,\r\n\tedgeStrokeWidth: 2,\r\n\tr: 5,\r\n\tstrokeWidth: 1,\r\n\tstrokeOpacity: 0.7,\r\n\tstrokeDasharray: \"Solid\",\r\n\thoverText: {\r\n\t\tenable: false,\r\n\t}\r\n};\r\n\r\nexport default EachTrendLine;"]}