{"version":3,"sources":["../../../src/lib/interactive/PitchFork.js"],"names":["PitchFork","props","handleStart","bind","handleEnd","handleDragChannel","handleDrawChannel","handleDragChannelComplete","terminate","saveNodeType","getSelectionState","nodes","state","index","newXYValue","setState","override","moreProps","channels","rest","newChannels","map","each","idx","selected","onComplete","xyValue","current","startXY","mouseMoved","finishXY","endXY","onStart","e","appearance","d","type","enabled","currentPositionRadius","currentPositionStroke","currentPositionOpacity","currentPositionStrokeWidth","hoverText","overrideIndex","tempChannel","eachAppearance","Component","propTypes","PropTypes","oneOf","bool","isRequired","func","onSelect","string","number","object","array","shape","stroke","strokeOpacity","strokeWidth","fill","fillOpacity","edgeStroke","edgeFill","edgeFill2","edgeStrokeWidth","r","defaultProps","noop","HoverTextNearMouse","enable","bgHeight","bgWidth","text","strokeMedianOne","strokeMedianHalf"],"mappings":";;;;;;;;;;AAEA;;;;AACA;;;;AAEA;;AACA;;AAKA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;IAEMA,S;;;AACL,oBAAYC,KAAZ,EAAmB;AAAA;;AAAA,oHACZA,KADY;;AAGlB,QAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBC,IAAjB,OAAnB;AACA,QAAKC,SAAL,GAAiB,MAAKA,SAAL,CAAeD,IAAf,OAAjB;AACA,QAAKE,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBF,IAAvB,OAAzB;AACA,QAAKG,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBH,IAAvB,OAAzB;AACA,QAAKI,yBAAL,GAAiC,MAAKA,yBAAL,CAA+BJ,IAA/B,OAAjC;;AAEA,QAAKK,SAAL,GAAiBA,kBAAUL,IAAV,OAAjB;AACA,QAAKM,YAAL,GAAoBA,qBAAaN,IAAb,OAApB;;AAEA,QAAKO,iBAAL,GAAyB,uCAA0B,UAA1B,EACvBP,IADuB,OAAzB;;AAGA,QAAKQ,KAAL,GAAa,EAAb;AACA,QAAKC,KAAL,GAAa,EAAb;AAhBkB;AAkBlB;;;;oCACiBC,K,EAAOC,U,EAAY;AACpC,QAAKC,QAAL,CAAc;AACbC;AACCH;AADD,OAEIC,UAFJ;AADa,IAAd;AAMA;;;4CACyBG,S,EAAW;AAAA;;AAAA,OAC5BD,QAD4B,GACf,KAAKJ,KADU,CAC5BI,QAD4B;AAAA,OAE5BE,QAF4B,GAEf,KAAKjB,KAFU,CAE5BiB,QAF4B;;;AAIpC,OAAI,sBAAUF,QAAV,CAAJ,EAAyB;AAAA,QAChBH,KADgB,GACGG,QADH,CAChBH,KADgB;AAAA,QACNM,IADM,4BACGH,QADH;;AAExB,QAAMI,cAAcF,SAClBG,GADkB,CACd,UAACC,IAAD,EAAOC,GAAP;AAAA,YAAeA,QAAQV,KAAR,gBACZS,IADY,EACHH,IADG,IACGK,UAAU,IADb,MAEjBF,IAFE;AAAA,KADc,CAApB;AAIA,SAAKP,QAAL,CAAc;AACbC,eAAU;AADG,KAAd,EAEG,YAAM;AACR,YAAKf,KAAL,CAAWwB,UAAX,CAAsBL,WAAtB,EAAmCH,SAAnC;AACA,KAJD;AAKA;AACD;;;oCACiBS,O,EAAS;AAAA,OAClBC,OADkB,GACN,KAAKf,KADC,CAClBe,OADkB;;AAE1B,OAAI,sBAAUA,OAAV,KACC,sBAAUA,QAAQC,OAAlB,CADL,EACiC;AAChC,SAAKC,UAAL,GAAkB,IAAlB;AACA,QAAI,yBAAaF,QAAQG,QAArB,CAAJ,EAAoC;AACnC,UAAKf,QAAL,CAAc;AACbY,eAAS;AACRC,gBAASD,QAAQC,OADT;AAERG,cAAOL;AAFC;AADI,MAAd;AAMA,KAPD,MAOO;AACN,UAAKX,QAAL,CAAc;AACbY,4BACIA,OADJ;AAECG,iBAAUJ;AAFX;AADa,MAAd;AAMA;AACD;AACD;;;8BACWA,O,EAAS;AAAA;;AAAA,OACZC,OADY,GACA,KAAKf,KADL,CACZe,OADY;;AAEpB,OAAI,yBAAaA,OAAb,KAAyB,yBAAaA,QAAQC,OAArB,CAA7B,EAA4D;AAC3D,SAAKC,UAAL,GAAkB,KAAlB;AACA,SAAKd,QAAL,CAAc;AACbY,cAAS;AACRC,eAASF,OADD;AAERK,aAAO;AAFC;AADI,KAAd,EAKG,YAAM;AACR,YAAK9B,KAAL,CAAW+B,OAAX;AACA,KAPD;AAQA;AACD;;;4BACSN,O,EAAST,S,EAAWgB,C,EAAG;AAAA;;AAAA,OACxBN,OADwB,GACZ,KAAKf,KADO,CACxBe,OADwB;AAAA,gBAEC,KAAK1B,KAFN;AAAA,OAExBiB,QAFwB,UAExBA,QAFwB;AAAA,OAEdgB,UAFc,UAEdA,UAFc;;AAGhC,OAAI,KAAKL,UAAL,IACA,sBAAUF,OAAV,CADA,IAEA,sBAAUA,QAAQC,OAAlB,CAFJ,EAGE;AACD,QAAI,yBAAaD,QAAQG,QAArB,CAAJ,EAAoC;AACnC,UAAKf,QAAL,CAAc;AACbY,4BACIA,OADJ;AAECG,iBAAU,CAACH,QAAQI,KAAR,CAAc,CAAd,CAAD,EAAmBJ,QAAQI,KAAR,CAAc,CAAd,CAAnB;AAFX;AADa,MAAd;AAMA,KAPD,MAOO;AACN,SAAMX,2CACFF,SAASG,GAAT,CAAa;AAAA,0BAAWc,CAAX,IAAcX,UAAU,KAAxB;AAAA,MAAb,CADE,iBAGDG,OAHC,IAGQH,UAAU,IAHlB;AAIJU;AAJI,SAAN;;AAQA,UAAKnB,QAAL,CAAc;AACbY,eAAS;AADI,MAAd,EAEG,YAAM;;AAER,aAAK1B,KAAL,CAAWwB,UAAX,CAAsBL,WAAtB,EAAmCH,SAAnC,EAA8CgB,CAA9C;AACA,MALD;AAMA;AACD;AACD;;;2BACQ;AAAA;;AAAA,iBAGJ,KAAKhC,KAHD;AAAA,OACAiC,UADA,WACAA,UADA;AAAA,OACYE,IADZ,WACYA,IADZ;AAAA,OACkBC,OADlB,WACkBA,OADlB;AAAA,OAC2BC,qBAD3B,WAC2BA,qBAD3B;AAAA,OACkDC,qBADlD,WACkDA,qBADlD;AAAA,OAEPC,sBAFO,WAEPA,sBAFO;AAAA,OAEiBC,0BAFjB,WAEiBA,0BAFjB;AAAA,OAE6CvB,QAF7C,WAE6CA,QAF7C;AAAA,OAEuDwB,SAFvD,WAEuDA,SAFvD;AAAA,gBAIsB,KAAK9B,KAJ3B;AAAA,OAIAe,OAJA,UAIAA,OAJA;AAAA,OAISX,QAJT,UAISA,QAJT;;AAKR,OAAM2B,gBAAgB,sBAAU3B,QAAV,IAAsBA,SAASH,KAA/B,GAAuC,IAA7D;AACA,OAAM+B,cAAc,sBAAUjB,OAAV,KAAsB,sBAAUA,QAAQI,KAAlB,CAAtB,GACjB,8BAAC,uBAAD;AACD,UAAMK,IADL;AAED,iBAAa;AAFZ,MAGGT,OAHH;AAID,gBAAYO,UAJX;AAKD,eAAWQ,SALV,IADiB,GAOjB,IAPH;;AASA,UAAO;AAAA;AAAA;AACLxB,aAASG,GAAT,CAAa,UAACC,IAAD,EAAOC,GAAP,EAAe;AAC5B,SAAMsB,iBAAiB,sBAAUvB,KAAKY,UAAf,iBACfA,UADe,EACAZ,KAAKY,UADL,IAEpBA,UAFH;;AAIA,YAAO,8BAAC,uBAAD;AACN,WAAKX,GADC;AAEN,YAAMa,IAFA;AAGN,WAAK,OAAK3B,YAAL,CAAkBc,GAAlB,CAHC;AAIN,aAAOA,GAJD;AAKN,gBAAUD,KAAKE,QALT;AAMN,iBAAWkB;AANL,QAODnB,QAAQoB,aAAR,GAAwB3B,QAAxB,GAAmCM,IAPlC;AAQN,kBAAYuB,cARN;AASN,cAAQ,OAAKxC,iBATP;AAUN,sBAAgB,OAAKE;AAVf,QAAP;AAYA,KAjBA,CADK;AAmBLqC,eAnBK;AAoBN,kCAAC,gCAAD;AACC,cAASP,OADV;AAEC,WAAM,KAFP;AAGC,QAAGC,qBAHJ;AAIC,aAAQC,qBAJT;AAKC,cAASC,sBALV;AAMC,kBAAaC,0BANd;AAOC,kBAAa,KAAKvC,WAPnB;AAQC,cAAS,KAAKE,SARf;AASC,kBAAa,KAAKE,iBATnB;AApBM,IAAP;AA+BA;;;;EA/JsBwC,gB;;AAmKxB9C,UAAU+C,SAAV,GAAsB;AACrBX,OAAMY,oBAAUC,KAAV,CAAgB,CACrB,WADqB,EACR;AACb,WAFqB,CAAhB,CAEO;AAFP,EADe;AAKrBZ,UAASW,oBAAUE,IAAV,CAAeC,UALH;;AAOrBnB,UAASgB,oBAAUI,IAAV,CAAeD,UAPH;AAQrB1B,aAAYuB,oBAAUI,IAAV,CAAeD,UARN;AASrBE,WAAUL,oBAAUI,IAAV,CAAeD,UATJ;;AAWrBZ,wBAAuBS,oBAAUM,MAXZ;AAYrBb,6BAA4BO,oBAAUO,MAZjB;AAarBf,yBAAwBQ,oBAAUO,MAbb;AAcrBjB,wBAAuBU,oBAAUO,MAdZ;;AAgBrBb,YAAWM,oBAAUQ,MAAV,CAAiBL,UAhBP;AAiBrBjC,WAAU8B,oBAAUS,KAAV,CAAgBN,UAjBL;;AAmBrBjB,aAAYc,oBAAUU,KAAV,CAAgB;AAC3BC,UAAQX,oBAAUM,MAAV,CAAiBH,UADE;AAE3BS,iBAAeZ,oBAAUO,MAAV,CAAiBJ,UAFL;AAG3BU,eAAab,oBAAUO,MAAV,CAAiBJ,UAHH;AAI3BW,QAAMd,oBAAUM,MAAV,CAAiBH,UAJI;AAK3BY,eAAaf,oBAAUO,MAAV,CAAiBJ,UALH;AAM3Ba,cAAYhB,oBAAUM,MAAV,CAAiBH,UANF;AAO3Bc,YAAUjB,oBAAUM,MAAV,CAAiBH,UAPA;AAQ3Be,aAAWlB,oBAAUM,MAAV,CAAiBH,UARD;AAS3BgB,mBAAiBnB,oBAAUO,MAAV,CAAiBJ,UATP;AAU3BiB,KAAGpB,oBAAUO,MAAV,CAAiBJ;AAVO,EAAhB,EAWTA;AA9BkB,CAAtB;;AAiCAnD,UAAUqE,YAAV,GAAyB;AACxBjC,OAAM,WADkB;AAExBJ,UAASsC,WAFe;AAGxB7C,aAAY6C,WAHY;AAIxBjB,WAAUiB,WAJc;;AAMxB/B,wBAAuB,SANC;AAOxBC,yBAAwB,CAPA;AAQxBC,6BAA4B,CARJ;AASxBH,wBAAuB,CATC;;AAWxBI,yBACI6B,6BAAmBF,YADvB;AAECG,UAAQ,IAFT;AAGCC,YAAU,EAHX;AAICC,WAAS,EAJV;AAKCC,QAAM;AALP,GAXwB;AAkBxBzD,WAAU,EAlBc;AAmBxBgB,aAAY;AACXyB,UAAQ,SADG;AAEXiB,mBAAiB,SAFN;AAGXC,oBAAkB,SAHP;AAIXjB,iBAAe,GAJJ;AAKXC,eAAa,CALF;AAMXC,QAAM,SANK;AAOXC,eAAa,GAPF;AAQXC,cAAY,SARD;AASXC,YAAU,SATC;AAUXC,aAAW,SAVA;AAWXC,mBAAiB,GAXN;AAYXC,KAAG;AAZQ;AAnBY,CAAzB;;kBAmCepE,S","file":"PitchFork.js","sourcesContent":["\r\n\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { isDefined, isNotDefined, noop } from \"../utils\";\r\nimport {\r\n\tterminate,\r\n\tsaveNodeType,\r\n\tisHoverForInteractiveType,\r\n} from \"./utils\";\r\nimport EachPitchFork from \"./wrapper/EachPitchFork\";\r\nimport MouseLocationIndicator from \"./components/MouseLocationIndicator\";\r\nimport HoverTextNearMouse from \"./components/HoverTextNearMouse\";\r\n\r\nclass PitchFork extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.handleStart = this.handleStart.bind(this);\r\n\t\tthis.handleEnd = this.handleEnd.bind(this);\r\n\t\tthis.handleDragChannel = this.handleDragChannel.bind(this);\r\n\t\tthis.handleDrawChannel = this.handleDrawChannel.bind(this);\r\n\t\tthis.handleDragChannelComplete = this.handleDragChannelComplete.bind(this);\r\n\r\n\t\tthis.terminate = terminate.bind(this);\r\n\t\tthis.saveNodeType = saveNodeType.bind(this);\r\n\r\n\t\tthis.getSelectionState = isHoverForInteractiveType(\"channels\")\r\n\t\t\t.bind(this);\r\n\r\n\t\tthis.nodes = [];\r\n\t\tthis.state = {\r\n\t\t};\r\n\t}\r\n\thandleDragChannel(index, newXYValue) {\r\n\t\tthis.setState({\r\n\t\t\toverride: {\r\n\t\t\t\tindex,\r\n\t\t\t\t...newXYValue\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\thandleDragChannelComplete(moreProps) {\r\n\t\tconst { override } = this.state;\r\n\t\tconst { channels } = this.props;\r\n\r\n\t\tif (isDefined(override)) {\r\n\t\t\tconst { index, ...rest } = override;\r\n\t\t\tconst newChannels = channels\r\n\t\t\t\t.map((each, idx) => idx === index\r\n\t\t\t\t\t? { ...each, ...rest, selected: true }\r\n\t\t\t\t\t: each);\r\n\t\t\tthis.setState({\r\n\t\t\t\toverride: null,\r\n\t\t\t}, () => {\r\n\t\t\t\tthis.props.onComplete(newChannels, moreProps);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thandleDrawChannel(xyValue) {\r\n\t\tconst { current } = this.state;\r\n\t\tif (isDefined(current)\r\n\t\t\t\t&& isDefined(current.startXY)) {\r\n\t\t\tthis.mouseMoved = true;\r\n\t\t\tif (isNotDefined(current.finishXY)) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcurrent: {\r\n\t\t\t\t\t\tstartXY: current.startXY,\r\n\t\t\t\t\t\tendXY: xyValue,\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcurrent: {\r\n\t\t\t\t\t\t...current,\r\n\t\t\t\t\t\tfinishXY: xyValue,\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\thandleStart(xyValue) {\r\n\t\tconst { current } = this.state;\r\n\t\tif (isNotDefined(current) || isNotDefined(current.startXY)) {\r\n\t\t\tthis.mouseMoved = false;\r\n\t\t\tthis.setState({\r\n\t\t\t\tcurrent: {\r\n\t\t\t\t\tstartXY: xyValue,\r\n\t\t\t\t\tendXY: null,\r\n\t\t\t\t}\r\n\t\t\t}, () => {\r\n\t\t\t\tthis.props.onStart();\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\thandleEnd(xyValue, moreProps, e) {\r\n\t\tconst { current } = this.state;\r\n\t\tconst { channels, appearance } = this.props;\r\n\t\tif (this.mouseMoved\r\n\t\t\t&& isDefined(current)\r\n\t\t\t&& isDefined(current.startXY)\r\n\t\t) {\r\n\t\t\tif (isNotDefined(current.finishXY)) {\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcurrent: {\r\n\t\t\t\t\t\t...current,\r\n\t\t\t\t\t\tfinishXY: [current.endXY[0], current.endXY[1]],\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tconst newChannels = [\r\n\t\t\t\t\t...channels.map(d => ({ ...d, selected: false })),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t...current, selected: true,\r\n\t\t\t\t\t\tappearance,\r\n\t\t\t\t\t}\r\n\t\t\t\t];\r\n\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcurrent: null,\r\n\t\t\t\t}, () => {\r\n\r\n\t\t\t\t\tthis.props.onComplete(newChannels, moreProps, e);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\trender() {\r\n\t\tconst { appearance, type, enabled, currentPositionRadius, currentPositionStroke,\r\n\t\t\tcurrentPositionOpacity, currentPositionStrokeWidth, channels, hoverText\r\n\t\t} = this.props;\r\n\t\tconst { current, override } = this.state;\r\n\t\tconst overrideIndex = isDefined(override) ? override.index : null;\r\n\t\tconst tempChannel = isDefined(current) && isDefined(current.endXY)\r\n\t\t\t? <EachPitchFork\r\n\t\t\t\ttype={type}\r\n\t\t\t\tinteractive={false}\r\n\t\t\t\t{...current}\r\n\t\t\t\tappearance={appearance}\r\n\t\t\t\thoverText={hoverText} />\r\n\t\t\t: null;\r\n\r\n\t\treturn <g>\r\n\t\t\t{channels.map((each, idx) => {\r\n\t\t\t\tconst eachAppearance = isDefined(each.appearance)\r\n\t\t\t\t\t? { ...appearance, ...each.appearance }\r\n\t\t\t\t\t: appearance;\r\n\r\n\t\t\t\treturn <EachPitchFork\r\n\t\t\t\t\tkey={idx}\r\n\t\t\t\t\ttype={type}\r\n\t\t\t\t\tref={this.saveNodeType(idx)}\r\n\t\t\t\t\tindex={idx}\r\n\t\t\t\t\tselected={each.selected}\r\n\t\t\t\t\thoverText={hoverText}\r\n\t\t\t\t\t{...(idx === overrideIndex ? override : each)}\r\n\t\t\t\t\tappearance={eachAppearance}\r\n\t\t\t\t\tonDrag={this.handleDragChannel}\r\n\t\t\t\t\tonDragComplete={this.handleDragChannelComplete}\r\n\t\t\t\t/>;\r\n\t\t\t})}\r\n\t\t\t{tempChannel}\r\n\t\t\t<MouseLocationIndicator\r\n\t\t\t\tenabled={enabled}\r\n\t\t\t\tsnap={false}\r\n\t\t\t\tr={currentPositionRadius}\r\n\t\t\t\tstroke={currentPositionStroke}\r\n\t\t\t\topacity={currentPositionOpacity}\r\n\t\t\t\tstrokeWidth={currentPositionStrokeWidth}\r\n\t\t\t\tonMouseDown={this.handleStart}\r\n\t\t\t\tonClick={this.handleEnd}\r\n\t\t\t\tonMouseMove={this.handleDrawChannel} />\r\n\t\t</g>;\r\n\t}\r\n}\r\n\r\n\r\nPitchFork.propTypes = {\r\n\ttype: PropTypes.oneOf([\r\n\t\t\"PITCHFORK\", // extends from -Infinity to +Infinity\r\n\t\t\"TRIANGLE\", // extends to +/-Infinity in one direction\r\n\t]),\r\n\tenabled: PropTypes.bool.isRequired,\r\n\r\n\tonStart: PropTypes.func.isRequired,\r\n\tonComplete: PropTypes.func.isRequired,\r\n\tonSelect: PropTypes.func.isRequired,\r\n\r\n\tcurrentPositionStroke: PropTypes.string,\r\n\tcurrentPositionStrokeWidth: PropTypes.number,\r\n\tcurrentPositionOpacity: PropTypes.number,\r\n\tcurrentPositionRadius: PropTypes.number,\r\n\r\n\thoverText: PropTypes.object.isRequired,\r\n\tchannels: PropTypes.array.isRequired,\r\n\r\n\tappearance: PropTypes.shape({\r\n\t\tstroke: PropTypes.string.isRequired,\r\n\t\tstrokeOpacity: PropTypes.number.isRequired,\r\n\t\tstrokeWidth: PropTypes.number.isRequired,\r\n\t\tfill: PropTypes.string.isRequired,\r\n\t\tfillOpacity: PropTypes.number.isRequired,\r\n\t\tedgeStroke: PropTypes.string.isRequired,\r\n\t\tedgeFill: PropTypes.string.isRequired,\r\n\t\tedgeFill2: PropTypes.string.isRequired,\r\n\t\tedgeStrokeWidth: PropTypes.number.isRequired,\r\n\t\tr: PropTypes.number.isRequired,\r\n\t}).isRequired\r\n};\r\n\r\nPitchFork.defaultProps = {\r\n\ttype: \"PITCHFORK\",\r\n\tonStart: noop,\r\n\tonComplete: noop,\r\n\tonSelect: noop,\r\n\r\n\tcurrentPositionStroke: \"#000000\",\r\n\tcurrentPositionOpacity: 1,\r\n\tcurrentPositionStrokeWidth: 3,\r\n\tcurrentPositionRadius: 4,\r\n\r\n\thoverText: {\r\n\t\t...HoverTextNearMouse.defaultProps,\r\n\t\tenable: true,\r\n\t\tbgHeight: 18,\r\n\t\tbgWidth: 90,\r\n\t\ttext: \"Click to select\",\r\n\t},\r\n\tchannels: [],\r\n\tappearance: {\r\n\t\tstroke: \"#990000\",\r\n\t\tstrokeMedianOne: \"#000099\",\r\n\t\tstrokeMedianHalf: \"#009B00\",\r\n\t\tstrokeOpacity: 0.5,\r\n\t\tstrokeWidth: 1,\r\n\t\tfill: \"#8AAFE2\",\r\n\t\tfillOpacity: 0.4,\r\n\t\tedgeStroke: \"#000000\",\r\n\t\tedgeFill: \"#FFFFFF\",\r\n\t\tedgeFill2: \"#FFFFFF\",\r\n\t\tedgeStrokeWidth: 0.7,\r\n\t\tr: 5,\r\n\t}\r\n};\r\n\r\nexport default PitchFork;\r\n"]}