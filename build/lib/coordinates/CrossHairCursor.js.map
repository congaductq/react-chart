{"version":3,"sources":["../../../src/lib/coordinates/CrossHairCursor.js"],"names":["CrossHairCursor","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","lines","helper","context","margin","ratio","originX","left","originY","top","save","setTransform","scale","translate","forEach","dashArray","line","strokeDasharray","split","map","d","strokeStyle","stroke","opacity","setLineDash","beginPath","moveTo","x1","y1","lineTo","x2","y2","restore","className","idx","rest","getMouseCanvas","Component","propTypes","PropTypes","string","oneOf","strokeDashTypes","contextTypes","object","isRequired","number","customX","xScale","xAccessor","currentItem","mouseXY","snapX","x","Math","round","defaultProps","show","height","width","line1","line2"],"mappings":"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","file":"CrossHairCursor.js","sourcesContent":["\r\n\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport GenericComponent, { getMouseCanvas } from \"../GenericComponent\";\r\n\r\nimport { hexToRGBA, isDefined, isNotDefined, strokeDashTypes, getStrokeDasharray } from \"../utils\";\r\n\r\nclass CrossHairCursor extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.renderSVG = this.renderSVG.bind(this);\r\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\r\n\t}\r\n\tdrawOnCanvas(ctx, moreProps) {\r\n\t\tconst lines = helper(this.props, moreProps);\r\n\r\n\t\tif (isDefined(lines)) {\r\n\r\n\t\t\tconst { margin, ratio } = this.context;\r\n\t\t\tconst originX = 0.5 * ratio + margin.left;\r\n\t\t\tconst originY = 0.5 * ratio + margin.top;\r\n\r\n\t\t\tctx.save();\r\n\t\t\tctx.setTransform(1, 0, 0, 1, 0, 0);\r\n\t\t\tctx.scale(ratio, ratio);\r\n\r\n\t\t\tctx.translate(originX, originY);\r\n\r\n\t\t\tlines.forEach(line => {\r\n\t\t\t\tconst dashArray = getStrokeDasharray(line.strokeDasharray).split(\",\").map(d => +d);\r\n\r\n\t\t\t\tctx.strokeStyle = hexToRGBA(line.stroke, line.opacity);\r\n\t\t\t\tctx.setLineDash(dashArray);\r\n\t\t\t\tctx.beginPath();\r\n\t\t\t\tctx.moveTo(line.x1, line.y1);\r\n\t\t\t\tctx.lineTo(line.x2, line.y2);\r\n\t\t\t\tctx.stroke();\r\n\t\t\t});\r\n\r\n\t\t\tctx.restore();\r\n\t\t}\r\n\t}\r\n\trenderSVG(moreProps) {\r\n\t\tconst { className } = this.props;\r\n\t\tconst lines = helper(this.props, moreProps);\r\n\r\n\t\tif (isNotDefined(lines)) return null;\r\n\r\n\t\treturn (\r\n\t\t\t<g className={`react-stockcharts-crosshair ${className}`}>\r\n\t\t\t\t{lines.map(({ strokeDasharray, ...rest }, idx) =>\r\n\t\t\t\t\t<line\r\n\t\t\t\t\t\tkey={idx}\r\n\t\t\t\t\t\tstrokeDasharray={getStrokeDasharray(strokeDasharray)}\r\n\t\t\t\t\t\t{...rest} />)}\r\n\t\t\t</g>\r\n\t\t);\r\n\t}\r\n\trender() {\r\n\t\treturn <GenericComponent\r\n\t\t\tsvgDraw={this.renderSVG}\r\n\t\t\tclip={false}\r\n\t\t\tcanvasDraw={this.drawOnCanvas}\r\n\t\t\tcanvasToDraw={getMouseCanvas}\r\n\t\t\tdrawOn={[\"mousemove\", \"pan\", \"drag\"]}\r\n\t\t/>;\r\n\t}\r\n}\r\n\r\nCrossHairCursor.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\tstrokeDasharray: PropTypes.oneOf(strokeDashTypes),\r\n};\r\n\r\nCrossHairCursor.contextTypes = {\r\n\tmargin: PropTypes.object.isRequired,\r\n\tratio: PropTypes.number.isRequired,\r\n\t// xScale for getting update event upon pan end, this is needed to get past the PureComponent shouldComponentUpdate\r\n\t// xScale: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction customX(props, moreProps) {\r\n\tconst { xScale, xAccessor, currentItem, mouseXY } = moreProps;\r\n\tconst { snapX } = props;\r\n\tconst x = snapX\r\n\t\t? Math.round(xScale(xAccessor(currentItem)))\r\n\t\t: mouseXY[0];\r\n\treturn x;\r\n}\r\n\r\n\r\nCrossHairCursor.defaultProps = {\r\n\tstroke: \"#000000\",\r\n\topacity: 0.3,\r\n\tstrokeDasharray: \"ShortDash\",\r\n\tsnapX: true,\r\n\tcustomX,\r\n};\r\n\r\nfunction helper(props, moreProps) {\r\n\tconst {\r\n\t\tmouseXY, currentItem, show, height, width\r\n\t} = moreProps;\r\n\r\n\tconst { customX, stroke, opacity, strokeDasharray } = props;\r\n\r\n\tif (!show || isNotDefined(currentItem)) return null;\r\n\r\n\tconst line1 = {\r\n\t\tx1: 0,\r\n\t\tx2: width,\r\n\t\ty1: mouseXY[1],\r\n\t\ty2: mouseXY[1],\r\n\t\tstroke, strokeDasharray, opacity,\r\n\t};\r\n\tconst x = customX(props, moreProps);\r\n\r\n\tconst line2 = {\r\n\t\tx1: x,\r\n\t\tx2: x,\r\n\t\ty1: 0,\r\n\t\ty2: height,\r\n\t\tstroke, strokeDasharray, opacity,\r\n\t};\r\n\treturn [line1, line2];\r\n}\r\n\r\nexport default CrossHairCursor;\r\n"]}