{"version":3,"sources":["../../../src/lib/series/VolumeProfileSeries.js"],"names":["VolumeProfileSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","width","helper","rects","sessionBg","getAxisCanvas","className","opacity","showSessionBackground","sessionBackGround","sessionBackGroundOpacity","sessionBgSvg","map","d","idx","i","x","y","w1","height","fill1","stroke1","w2","fill2","stroke2","Component","propTypes","PropTypes","string","number","bool","defaultProps","bins","maxProfileWidthPercent","fill","type","stroke","source","close","volume","absoluteChange","bySession","sessionStart","plotData","date","getMonth","orient","partialStartOK","partialEndOK","realXScale","xScale","yScale","chartConfig","sessionBuilder","discardTillStart","discardTillEnd","accumulateTill","accumulator","identity","dx","length","sessions","allRects","begin","session","finish","sessionWidth","histogram2","value","thresholds","rollup","key","direction","sortKeys","descending","ascending","leaves","values","volumeInBins","arr","entries","volumeValues","each","base","range","start","end","domain","totalVolumes","totalVolume","volumes","totalVolumeX","ws","Math","abs","x1","x0","fillStyle","forEach","beginPath","rect","closePath","strokeStyle"],"mappings":"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","file":"VolumeProfileSeries.js","sourcesContent":["\r\n\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { ascending, descending, sum, max, merge, zip, histogram as d3Histogram } from \"d3-array\";\r\nimport { nest } from \"d3-collection\";\r\nimport { scaleLinear } from \"d3-scale\";\r\n\r\nimport GenericChartComponent from \"../GenericChartComponent\";\r\nimport { getAxisCanvas } from \"../GenericComponent\";\r\n\r\nimport { head, last, hexToRGBA, accumulatingWindow, identity, functor } from \"../utils\";\r\n\r\nclass VolumeProfileSeries extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.renderSVG = this.renderSVG.bind(this);\r\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\r\n\t}\r\n\tdrawOnCanvas(ctx, moreProps) {\r\n\t\tconst { xAccessor, width } = moreProps;\r\n\t\tconst { rects, sessionBg } = helper(this.props, moreProps, xAccessor, width);\r\n\r\n\t\tdrawOnCanvas(ctx, this.props, rects, sessionBg);\r\n\t}\r\n\trender() {\r\n\t\treturn <GenericChartComponent\r\n\t\t\tsvgDraw={this.renderSVG}\r\n\t\t\tcanvasDraw={this.drawOnCanvas}\r\n\t\t\tcanvasToDraw={getAxisCanvas}\r\n\t\t\tdrawOn={[\"pan\"]}\r\n\t\t/>;\r\n\t}\r\n\trenderSVG(moreProps) {\r\n\t\tconst { className, opacity } = this.props;\r\n\t\tconst { showSessionBackground, sessionBackGround, sessionBackGroundOpacity } = this.props;\r\n\r\n\t\tconst { xAccessor, width } = moreProps;\r\n\t\tconst { rects, sessionBg } = helper(this.props, moreProps, xAccessor, width);\r\n\r\n\t\tconst sessionBgSvg = showSessionBackground\r\n\t\t\t? sessionBg.map((d, idx) => <rect key={idx} {...d} opacity={sessionBackGroundOpacity} fill={sessionBackGround} />)\r\n\t\t\t: null;\r\n\r\n\t\treturn <g className={className}>\r\n\t\t\t{sessionBgSvg}\r\n\t\t\t{rects.map((d, i) => <g key={i}>\r\n\t\t\t\t<rect x={d.x} y={d.y}\r\n\t\t\t\t\twidth={d.w1} height={d.height}\r\n\t\t\t\t\tfill={d.fill1} stroke={d.stroke1} fillOpacity={opacity} />\r\n\t\t\t\t<rect x={d.x + d.w1} y={d.y}\r\n\t\t\t\t\twidth={d.w2} height={d.height}\r\n\t\t\t\t\tfill={d.fill2} stroke={d.stroke2} fillOpacity={opacity} />\r\n\t\t\t</g>)}\r\n\t\t</g>;\r\n\t}\r\n}\r\n\r\nVolumeProfileSeries.propTypes = {\r\n\tclassName: PropTypes.string,\r\n\topacity: PropTypes.number,\r\n\tshowSessionBackground: PropTypes.bool,\r\n\tsessionBackGround: PropTypes.string,\r\n\tsessionBackGroundOpacity: PropTypes.number,\r\n};\r\n\r\n\r\nVolumeProfileSeries.defaultProps = {\r\n\tclassName: \"line \",\r\n\tbins: 20,\r\n\topacity: 0.5,\r\n\tmaxProfileWidthPercent: 50,\r\n\tfill: ({ type }) => type === \"up\" ? \"#6BA583\" : \"#FF0000\",\r\n\tstroke: \"#FFFFFF\",\r\n\tshowSessionBackground: false,\r\n\tsessionBackGround: \"#4682B4\",\r\n\tsessionBackGroundOpacity: 0.3,\r\n\r\n\tsource: d => d.close,\r\n\tvolume: d => d.volume,\r\n\tabsoluteChange: d => d.absoluteChange,\r\n\tbySession: false,\r\n\t/* eslint-disable no-unused-vars */\r\n\tsessionStart: ({ d, i, plotData }) => i > 0 && plotData[i - 1].date.getMonth() !== d.date.getMonth(),\r\n\t/* eslint-enable no-unused-vars */\r\n\torient: \"left\",\r\n\t// // fill: ({ type }) => { var c = type === \"up\" ? \"#6BA583\" : \"#FF0000\"; console.log(type, c); return c },\r\n\t// stroke: ({ type }) =>  type === \"up\" ? \"#6BA583\" : \"#FF0000\",\r\n\t// stroke: \"none\",\r\n\tpartialStartOK: true,\r\n\tpartialEndOK: true,\r\n};\r\n\r\nfunction helper(props, moreProps, xAccessor, width) {\r\n\tconst { xScale: realXScale, chartConfig: { yScale }, plotData } = moreProps;\r\n\r\n\tconst { sessionStart, bySession, partialStartOK, partialEndOK } = props;\r\n\tconst { bins, maxProfileWidthPercent, source, volume, absoluteChange, orient, fill, stroke } = props;\r\n\r\n\tconst sessionBuilder = accumulatingWindow()\r\n\t\t.discardTillStart(!partialStartOK)\r\n\t\t.discardTillEnd(!partialEndOK)\r\n\t\t.accumulateTill((d, i) => {\r\n\t\t\treturn sessionStart({ d, i, ...moreProps });\r\n\t\t})\r\n\t\t.accumulator(identity);\r\n\r\n\tconst dx = plotData.length > 1 ? realXScale(xAccessor(plotData[1])) - realXScale(xAccessor(head(plotData))) : 0;\r\n\r\n\tconst sessions = bySession ? sessionBuilder(plotData) : [plotData];\r\n\r\n\tconst allRects = sessions.map(session => {\r\n\r\n\t\tconst begin = bySession ? realXScale(xAccessor(head(session))) : 0;\r\n\t\tconst finish = bySession ? realXScale(xAccessor(last(session))) : width;\r\n\t\tconst sessionWidth = finish - begin + dx;\r\n\r\n\t\t// console.log(session)\r\n\r\n\t\t/* var histogram = d3.layout.histogram()\r\n\t\t\t\t.value(source)\r\n\t\t\t\t.bins(bins);*/\r\n\r\n\t\tconst histogram2 = d3Histogram()\r\n\t\t\t// .domain(xScale.domain())\r\n\t\t\t.value(source)\r\n\t\t\t.thresholds(bins);\r\n\r\n\t\t// console.log(bins, histogram(session))\r\n\t\t// console.log(bins, histogram2(session))\r\n\t\tconst rollup = nest()\r\n\t\t\t.key(d => d.direction)\r\n\t\t\t.sortKeys(orient === \"right\" ? descending : ascending)\r\n\t\t\t.rollup(leaves => sum(leaves, d => d.volume));\r\n\r\n\t\tconst values = histogram2(session);\r\n\t\t// console.log(\"values\", values)\r\n\r\n\t\tconst volumeInBins = values\r\n\t\t\t.map(arr => arr.map(d => absoluteChange(d) > 0 ? { direction: \"up\", volume: volume(d) } : { direction: \"down\", volume: volume(d) }))\r\n\t\t\t.map(arr => rollup.entries(arr));\r\n\r\n\t\t// console.log(\"volumeInBins\", volumeInBins)\r\n\t\tconst volumeValues = volumeInBins\r\n\t\t\t.map(each => sum(each.map(d => d.value)));\r\n\r\n\t\t// console.log(\"volumeValues\", volumeValues)\r\n\t\tconst base = xScale => head(xScale.range());\r\n\r\n\t\tconst [start, end] = orient === \"right\"\r\n\t\t\t? [begin, begin + sessionWidth * maxProfileWidthPercent / 100]\r\n\t\t\t: [finish, finish - sessionWidth * (100 - maxProfileWidthPercent) / 100];\r\n\r\n\t\tconst xScale = scaleLinear()\r\n\t\t\t.domain([0, max(volumeValues)])\r\n\t\t\t.range([start, end]);\r\n\r\n\t\t// console.log(xScale.domain())\r\n\r\n\t\tconst totalVolumes = volumeInBins.map(volumes => {\r\n\r\n\t\t\tconst totalVolume = sum(volumes, d => d.value);\r\n\t\t\tconst totalVolumeX = xScale(totalVolume);\r\n\t\t\tconst width = base(xScale) - totalVolumeX;\r\n\t\t\tconst x = width < 0 ? totalVolumeX + width : totalVolumeX;\r\n\r\n\t\t\tconst ws = volumes.map(d => {\r\n\t\t\t\treturn {\r\n\t\t\t\t\ttype: d.key,\r\n\t\t\t\t\twidth: d.value * Math.abs(width) / totalVolume,\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t\treturn { x, ws, totalVolumeX };\r\n\t\t});\r\n\t\t// console.log(\"totalVolumes\", totalVolumes)\r\n\r\n\t\tconst rects = zip(values, totalVolumes)\r\n\t\t\t.map(([d, { x, ws }]) => {\r\n\t\t\t\tconst w1 = ws[0] || { type: \"up\", width: 0 };\r\n\t\t\t\tconst w2 = ws[1] || { type: \"down\", width: 0 };\r\n\r\n\t\t\t\treturn {\r\n\t\t\t\t\t// y: yScale(d.x + d.dx),\r\n\t\t\t\t\ty: yScale(d.x1),\r\n\t\t\t\t\t// height: yScale(d.x - d.dx) - yScale(d.x),\r\n\t\t\t\t\theight: yScale(d.x1) - yScale(d.x0),\r\n\t\t\t\t\tx,\r\n\t\t\t\t\twidth,\r\n\t\t\t\t\tw1: w1.width,\r\n\t\t\t\t\tw2: w2.width,\r\n\t\t\t\t\tstroke1: functor(stroke)(w1),\r\n\t\t\t\t\tstroke2: functor(stroke)(w2),\r\n\t\t\t\t\tfill1: functor(fill)(w1),\r\n\t\t\t\t\tfill2: functor(fill)(w2),\r\n\t\t\t\t};\r\n\t\t\t});\r\n\r\n\t\t// console.log(\"rects\", rects)\r\n\r\n\t\tconst sessionBg = {\r\n\t\t\tx: begin,\r\n\t\t\ty: last(rects).y,\r\n\t\t\theight: head(rects).y - last(rects).y + head(rects).height,\r\n\t\t\twidth: sessionWidth,\r\n\t\t};\r\n\r\n\t\treturn { rects, sessionBg };\r\n\t});\r\n\r\n\treturn {\r\n\t\trects: merge(allRects.map(d => d.rects)),\r\n\t\tsessionBg: allRects.map(d => d.sessionBg),\r\n\t};\r\n}\r\n\r\n\r\nfunction drawOnCanvas(ctx, props, rects, sessionBg) {\r\n\tconst { opacity, sessionBackGround, sessionBackGroundOpacity, showSessionBackground } = props;\r\n\r\n\t// var { rects, sessionBg } = helper(props, xScale, yScale, plotData);\r\n\r\n\tif (showSessionBackground) {\r\n\t\tctx.fillStyle = hexToRGBA(sessionBackGround, sessionBackGroundOpacity);\r\n\r\n\t\tsessionBg.forEach(each => {\r\n\t\t\tconst { x, y, height, width } = each;\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.rect(x, y, width, height);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.fill();\r\n\t\t});\r\n\t}\r\n\r\n\trects.forEach(each => {\r\n\t\tconst { x, y, height, w1, w2, stroke1, stroke2, fill1, fill2 } = each;\r\n\r\n\r\n\t\tif (w1 > 0) {\r\n\t\t\tctx.fillStyle = hexToRGBA(fill1, opacity);\r\n\t\t\tif (stroke1 !== \"none\") ctx.strokeStyle = stroke1;\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.rect(x, y, w1, height);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.fill();\r\n\r\n\t\t\tif (stroke1 !== \"none\") ctx.stroke();\r\n\t\t}\r\n\r\n\t\tif (w2 > 0) {\r\n\t\t\tctx.fillStyle = hexToRGBA(fill2, opacity);\r\n\t\t\tif (stroke2 !== \"none\") ctx.strokeStyle = stroke2;\r\n\r\n\t\t\tctx.beginPath();\r\n\t\t\tctx.rect(x + w1, y, w2, height);\r\n\t\t\tctx.closePath();\r\n\t\t\tctx.fill();\r\n\r\n\t\t\tif (stroke2 !== \"none\") ctx.stroke();\r\n\t\t}\r\n\r\n\t});\r\n}\r\n\r\nexport default VolumeProfileSeries;\r\n"]}