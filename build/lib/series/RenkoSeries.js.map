{"version":3,"sources":["../../../src/lib/series/RenkoSeries.js"],"names":["RenkoSeries","props","renderSVG","bind","drawOnCanvas","ctx","moreProps","xAccessor","xScale","yScale","chartConfig","plotData","yAccessor","candles","getRenko","clip","getAxisCanvas","map","each","idx","className","fill","x","y","width","height","Component","propTypes","classNames","PropTypes","shape","up","string","down","stroke","partial","func","isRequired","bool","defaultProps","open","d","high","low","close","renko","forEach","beginPath","strokeStyle","fillStyle","rect","closePath","length","candleWidth","filter","ohlc","Math","max","abs","svgfill","fullyFormed"],"mappings":"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","file":"RenkoSeries.js","sourcesContent":["\r\n\r\nimport React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport GenericChartComponent from \"../GenericChartComponent\";\r\nimport { getAxisCanvas } from \"../GenericComponent\";\r\n\r\nimport { isDefined } from \"../utils\";\r\n\r\nclass RenkoSeries extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.renderSVG = this.renderSVG.bind(this);\r\n\t\tthis.drawOnCanvas = this.drawOnCanvas.bind(this);\r\n\t}\r\n\tdrawOnCanvas(ctx, moreProps) {\r\n\t\tconst { xAccessor } = moreProps;\r\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\r\n\r\n\t\tconst { yAccessor } = this.props;\r\n\r\n\t\tconst candles = getRenko(this.props, plotData, xScale, xAccessor, yScale, yAccessor);\r\n\r\n\t\tdrawOnCanvas(ctx, candles);\r\n\t}\r\n\trender() {\r\n\t\tconst { clip } = this.props;\r\n\r\n\t\treturn <GenericChartComponent\r\n\t\t\tclip={clip}\r\n\t\t\tsvgDraw={this.renderSVG}\r\n\t\t\tcanvasDraw={this.drawOnCanvas}\r\n\t\t\tcanvasToDraw={getAxisCanvas}\r\n\t\t\tdrawOn={[\"pan\"]}\r\n\t\t/>;\r\n\t}\r\n\trenderSVG(moreProps) {\r\n\t\tconst { xAccessor } = moreProps;\r\n\t\tconst { xScale, chartConfig: { yScale }, plotData } = moreProps;\r\n\r\n\t\tconst { yAccessor } = this.props;\r\n\r\n\t\tconst candles = getRenko(this.props, plotData, xScale, xAccessor, yScale, yAccessor)\r\n\t\t\t.map((each, idx) => (<rect key={idx} className={each.className}\r\n\t\t\t\tfill={each.fill}\r\n\t\t\t\tx={each.x}\r\n\t\t\t\ty={each.y}\r\n\t\t\t\twidth={each.width}\r\n\t\t\t\theight={each.height} />));\r\n\r\n\t\treturn (\r\n\t\t\t<g>\r\n\t\t\t\t<g className=\"candle\">\r\n\t\t\t\t\t{candles}\r\n\t\t\t\t</g>\r\n\t\t\t</g>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nRenkoSeries.propTypes = {\r\n\tclassNames: PropTypes.shape({\r\n\t\tup: PropTypes.string,\r\n\t\tdown: PropTypes.string\r\n\t}),\r\n\tstroke: PropTypes.shape({\r\n\t\tup: PropTypes.string,\r\n\t\tdown: PropTypes.string\r\n\t}),\r\n\tfill: PropTypes.shape({\r\n\t\tup: PropTypes.string,\r\n\t\tdown: PropTypes.string,\r\n\t\tpartial: PropTypes.string\r\n\t}),\r\n\tyAccessor: PropTypes.func.isRequired,\r\n\tclip: PropTypes.bool.isRequired,\r\n};\r\n\r\nRenkoSeries.defaultProps = {\r\n\tclassNames: {\r\n\t\tup: \"up\",\r\n\t\tdown: \"down\"\r\n\t},\r\n\tstroke: {\r\n\t\tup: \"none\",\r\n\t\tdown: \"none\"\r\n\t},\r\n\tfill: {\r\n\t\tup: \"#6BA583\",\r\n\t\tdown: \"#E60000\",\r\n\t\tpartial: \"#4682B4\",\r\n\t},\r\n\tyAccessor: d => ({ open: d.open, high: d.high, low: d.low, close: d.close }),\r\n\tclip: true,\r\n};\r\n\r\nfunction drawOnCanvas(ctx, renko) {\r\n\trenko.forEach(d => {\r\n\t\tctx.beginPath();\r\n\r\n\t\tctx.strokeStyle = d.stroke;\r\n\t\tctx.fillStyle = d.fill;\r\n\r\n\t\tctx.rect(d.x, d.y, d.width, d.height);\r\n\t\tctx.closePath();\r\n\t\tctx.fill();\r\n\t});\r\n}\r\n\r\nfunction getRenko(props, plotData, xScale, xAccessor, yScale, yAccessor) {\r\n\tconst { classNames, fill } = props;\r\n\tconst width = xScale(xAccessor(plotData[plotData.length - 1]))\r\n\t\t- xScale(xAccessor(plotData[0]));\r\n\r\n\tconst candleWidth = (width / (plotData.length - 1));\r\n\tconst candles = plotData\r\n\t\t.filter(d => isDefined(yAccessor(d).close))\r\n\t\t.map(d => {\r\n\t\t\tconst ohlc = yAccessor(d);\r\n\t\t\tconst x = xScale(xAccessor(d)) - 0.5 * candleWidth,\r\n\t\t\t\ty = yScale(Math.max(ohlc.open, ohlc.close)),\r\n\t\t\t\theight = Math.abs(yScale(ohlc.open) - yScale(ohlc.close)),\r\n\t\t\t\tclassName = (ohlc.open <= ohlc.close) ? classNames.up : classNames.down;\r\n\r\n\t\t\tconst svgfill = d.fullyFormed\r\n\t\t\t\t? (ohlc.open <= ohlc.close ? fill.up : fill.down)\r\n\t\t\t\t: fill.partial;\r\n\r\n\t\t\treturn {\r\n\t\t\t\tclassName: className,\r\n\t\t\t\tfill: svgfill,\r\n\t\t\t\tx: x,\r\n\t\t\t\ty: y,\r\n\t\t\t\theight: height,\r\n\t\t\t\twidth: candleWidth,\r\n\t\t\t};\r\n\t\t});\r\n\treturn candles;\r\n}\r\n\r\nexport default RenkoSeries;\r\n"]}